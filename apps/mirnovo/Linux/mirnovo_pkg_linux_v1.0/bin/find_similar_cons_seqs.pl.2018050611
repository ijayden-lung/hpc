#!/usr/bin/env perl

use strict;
use warnings;

my $base_dir = $ARGV[0];
my $swan_identity_threshold = $ARGV[1];
my $swan_index = $ARGV[2];
my $inflation_parameter = $ARGV[3];
my $job_id = $ARGV[4];

print "[$job_id]>> Refining vsearch-derived clusters...\n";

my $cons_file = $base_dir."/consensus_sequences.fa";
my %checked_clusters;


`rm -f $base_dir/mcl_input.abc`;

# run swan for specific seq
#my $out = `swan -r t.fa -q $cons_file --key-value | ./parse_for_consSeqs_clustering.pl >> $base_dir/mcl_input.abc`;
print "\t[$job_id]>> Running [swan]...\n";
my $out = `./reaper-16-098/src/swan -q $cons_file -r $cons_file --skip-same-name -index $swan_index -identity $swan_identity_threshold --key-value 2>/dev/null | ./parse_for_consSeqs_clustering.pl >> $base_dir/mcl_input.abc`;

#print $out;
#print "./reaper-16-098/src/swan -q $cons_file -r $cons_file --skip-same-name -index $swan_index -identity $swan_identity_threshold --key-value 2>/dev/null | ./parse_for_consSeqs_clustering.pl >> $base_dir/mcl_input.abc";
print "\t[$job_id]<< [swan] run complete!\n";

print "\t[$job_id]>> Running [mcl] to get refined clusters...\n";
# run mcl to get merged clusters
`util/mcl $base_dir/mcl_input.abc --abc -o $base_dir/res.mcl -I $inflation_parameter`;
print "\t[$job_id]<< [mcl] run complete!\n";

# parse mcl output
`perl read_mcl_res_and_merge_clusters.pl $base_dir`;

print "[$job_id]<< Clusters refinement complete!\n\n";
