#!/usr/bin/perl
$|=1;

use strict; 
use Data::Dumper;
use Cwd;
#use Switch;
use POSIX qw(ceil floor fmod);

my $core_uuid = shift(@ARGV);
my $job_id = shift(@ARGV);
my $species_input = shift(@ARGV);
my $wd = shift(@ARGV);
my $USE_FRACTIONAL_COUNTS_FOR_PARALOGS = shift(@ARGV);
my $TALLY_LENGTH_LOWER_THRES = shift(@ARGV);
my $TALLY_LENGTH_UPPER_THRES = shift(@ARGV);

my $blast_id = 90;
my $blastEval = 0.05;  
my $mcl_id = 0.80;
my $mcl_inflation = 1.2;
my $mcl_kmer_index = 7;
my $blast_aln_length_thres = 16;


my $wd_root = $wd;


# set local $wd:
$wd = "$wd/$job_id";


my $output = "$wd/global_output.log";
open (FILEOUT,">$output");
my $FILEOUT_STR = '';



mkdir "$wd/logs/";
chmod(0777, "$wd/logs") or die "Couldn't chmod $wd/logs: $!";
open (PROGRESS_FH,">>$wd_root/bsub.log");




my @filenames = ();


foreach my $a (@ARGV){
	push(@filenames,$a);
}


$FILEOUT_STR .= "\nMirnovo v1.0 {Enright Lab - EMBL EBI (c) 2016 }\n";
$FILEOUT_STR .= "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n";
my $species_file = "../data/$species_input.fasta";


$FILEOUT_STR .= "Will process the following files: @filenames\n";
$FILEOUT_STR .= "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n";


# basic parameters
my $blast_hits_depth = 3;
my $wordsize = 7;


print "filenames:\n";
$FILEOUT_STR .= @filenames;

my $outputFolder = $wd;
$FILEOUT_STR .= "\noutputFolder: $outputFolder\n";

my $curTaxonName = $species_input;
$FILEOUT_STR .= "curTaxonName: $curTaxonName\n";


foreach(@filenames){
        $FILEOUT_STR .= "input: $_\n";
}

$FILEOUT_STR .= "output: $outputFolder\n";




$FILEOUT_STR .= "\nProcessing files:\n\n";

# read run parameters from file
my %parameters_hash = ();
open(PARH, "$wd_root/parameters.log");
while(<PARH>){

	chomp;
	my @vals = split("\t", $_);
	if($#vals == 1){
		$parameters_hash{ $vals[0] } = $vals[1];
	} else{
		$parameters_hash{ $vals[0] } = 'NA';
	}

}
close(PARH);

print FILEOUT Dumper(\%parameters_hash);


###########################################
############### MAIN LOOP #################
###########################################

my $exit_cnt = 0;
foreach my $filename(@filenames){


    my $lastSlashIndex = rindex($filename, '/');
    my $filename_id = substr($filename, $lastSlashIndex+1);

    $FILEOUT_STR .= "\n\n";
    $FILEOUT_STR .= "+----------------------+\n";
    $FILEOUT_STR .= "+  Running mirnovo...  +\n";
    $FILEOUT_STR .= "+----------------------+\n";


    my $disable_pdf_generation = $parameters_hash{'disable_pdf_generation'};
    my $cdhit_aln_id = $parameters_hash{'cdhit_aln_id'};
    my $cdhit_kmer = $parameters_hash{'cdhit_kmer'};
    my $vsearch_id = $parameters_hash{'vsearch_id'};
    my $min_read_depth = $parameters_hash{'min_read_depth'};
    my $min_variants = $parameters_hash{'min_variants'};
    my $map_against_known_mirbase_species = 'True';
    if( $species_input eq '-' ){
    	$map_against_known_mirbase_species = 'False';
    }

    my $calc_genomic_features = 'True';
    if( $parameters_hash{'disable_genomic_features_option'} eq 'checked' || $species_input eq 'NA'){
    	$calc_genomic_features = 'False';
    }

    my $training_model_option = $parameters_hash{'training_model_option'};

    `mkdir -p $wd/qc_advanced`;
    `chmod -R 777 $wd/qc_advanced`;
	
     #print PROGRESS_FH ">>TALLY_LENGTH_LOWER_THRES: $TALLY_LENGTH_LOWER_THRES\n>>TALLY_LENGTH_UPPER_THRES: $TALLY_LENGTH_UPPER_THRES\n";  


    print FILEOUT "python -u mirnovo_analysis.py $filename $vsearch_id $min_read_depth $min_variants $species_input $blast_id 16 $blastEval $map_against_known_mirbase_species $mcl_id $mcl_kmer_index $mcl_inflation True $calc_genomic_features $training_model_option $core_uuid $job_id $TALLY_LENGTH_LOWER_THRES $TALLY_LENGTH_UPPER_THRES $cdhit_aln_id $cdhit_kmer >> $wd_root/bsub.log";

    `python -u mirnovo_analysis.py $filename $vsearch_id $min_read_depth $min_variants $species_input $blast_id $blast_aln_length_thres $blastEval $map_against_known_mirbase_species $mcl_id $mcl_kmer_index $mcl_inflation True $calc_genomic_features $training_model_option $core_uuid $job_id $TALLY_LENGTH_LOWER_THRES $TALLY_LENGTH_UPPER_THRES $cdhit_aln_id $cdhit_kmer $disable_pdf_generation >> $wd_root/bsub.log`; # 2>/dev/null`;
 
     # cleanup mirnovo.log from null device 1 lines...
     #`./aux_sed_script.sh $wd`;

}


print FILEOUT $FILEOUT_STR;
close(FILEOUT);


# Return end of script signal.
#  -------------------
$FILEOUT_STR .= "\n\nMirnas Identification finished succesfully!<br/>";
$FILEOUT_STR =~ s/\.\.\/tmp/cur_wd/g;
$FILEOUT_STR =~ s/\.\.\/data/data_dir/g;
print FILEOUT $FILEOUT_STR;
close(FILEOUT);

my $done_file_signal = "$wd/done";
open (DONE_F_SIG, ">$done_file_signal");
print DONE_F_SIG "mirnovo_analysis.py returned.\n";
close (DONE_F_SIG);
#  --------------------




sub timestamp{
    my $d=`date`;
    chomp($d);
    return($d);
}




# *** results post-processing ***

# indicate end of overall run!
`echo TRUE >> $wd_root/done`;

