pdf(file='rra_T0vsT1D.pdf',width=4.5,height=4.5);
gstable=read.table('rra_T0vsT1D.gene_summary.txt',header=T)
# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("CCAR1","MRPS21","WDR61","STRAP","LRRFIP2","ADAT3","EIF2B2","MARS2","NOP10","FARS2")
# samplelabel=sub('.\\w+.\\w+$','',colnames(gstable)[startindex]);
samplelabel='T1D_1,T1D_2,T1D_3_vs_T0_1,T0_2,T0_3 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(212.50138974724067,199.31289227299192,181.92263091051436,155.5972991142347,80.91530779931344,136.67003499358108),c(261.65137104932353,257.07295493169573,237.5291709246716,106.26157012679442,108.36871580265193,199.3627115961412),c(289.11753707107573,303.44370946051424,300.6872163728502,183.42771033791894,156.05095075581877,120.36993907691544),c(0.0,0.0,0.0,0.0,0.0,0.0),c(610.7607970626475,594.6845887818657,678.2624880739178,349.1451589880388,473.9325171102644,406.24854438458965),c(520.4115667279364,514.9594318726689,435.2413131972306,511.06755156220174,177.72469391634917,319.73265067305664))
targetgene="CCAR1"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(176.3616976133562,222.09150853276242,221.053159068625,121.4417944306222,56.351732217379,43.88487362179209),c(181.4212545121,178.16132003177646,144.85160423440956,107.52658881878007,200.84335328758158,52.66184834615051),c(153.23229464767013,180.601886059609,203.89064671857648,82.22621497906711,31.788156635444565,22.569363576921646),c(125.04333478324025,85.4198109741394,100.22907212428339,127.76688789055044,50.5720673745709,72.72350485896975),c(135.1624485807279,173.28018797611134,152.40310966843091,113.85168227870831,122.81787790967218,203.12427219229482),c(126.48892246859563,136.67169755862304,139.35960028239404,6.325093459928239,4.334748632106077,87.76974724358418))
targetgene="MRPS21"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(135.1624485807279,100.06320714113473,107.78057755830474,192.28284118181847,180.6145263377532,55.16955541025291),c(265.26534026271196,232.66729465337016,254.6916832747201,18.975280379784717,208.0679343410917,37.615605961536076),c(75.89335348115738,103.31729517824479,90.61806520825621,0.0,60.68648084948508,48.9002877499969),c(113.47863330039722,69.96289279786656,76.20155483421546,61.98591590729674,40.45765389965672,41.377166557689684),c(255.14622646522432,250.56477885747557,237.5291709246716,80.96119628708146,180.6145263377532,82.75433311537937),c(344.7726629572578,331.91697978522734,356.29375638700736,149.27220565430645,141.6017886487985,300.9248476922886))
targetgene="WDR61"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(493.6681945488618,478.3509414551806,437.30081467923645,231.49842063337357,262.9747503477687,205.63197925639722),c(262.3741648920012,236.73490469975775,260.8701877207376,113.85168227870831,161.83061559862688,213.15510044870445),c(163.35140844515777,118.77421335451764,150.3436081864251,177.1026168779907,210.95776676249574,66.45423719871374),c(551.4917019630769,664.6474815797322,650.1159678198381,311.1945982284694,249.97050445145044,250.7707064102405),c(124.32054094056257,123.65534541018275,106.40757657030086,36.68554206758379,10.11441347491418,2.507707064102405),c(402.59617037147297,341.6792438965576,367.27776429103847,223.90830848145967,476.82234953166846,298.4171406281862))
targetgene="STRAP"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(248.64108188112513,249.75125684819804,227.2316635146425,323.84478514832585,339.55530951497605,184.31646921152677),c(557.9968465471761,571.0924505128177,509.3833665494402,140.41707481040692,343.89005814708213,613.134377173038),c(156.8462638610586,176.53427601322142,144.1651037404076,83.49123367105275,50.5720673745709,46.392580685894494),c(331.7623737890594,370.15251422127074,370.71026676104816,351.67519637201013,166.16536423073296,190.58573687178279),c(203.8278636351084,222.09150853276242,227.2316635146425,110.05662620275136,427.6951983677996,107.83140375640342),c(64.32865199831434,86.23333298341691,75.51505434021351,15.180224303827774,23.11865937123241,46.392580685894494))
targetgene="LRRFIP2"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(349.1094260133239,382.3553443604335,430.435809739217,251.73871970514392,222.51709644811194,382.4253272756168),c(174.19331608532312,150.50157171634083,164.0736180664639,86.02127105502406,140.15687243809649,91.53130783973779),c(78.06173500919044,87.04685499269443,67.27704841219023,31.625467299641198,15.894078317722283,56.423408942304114),c(0.0,0.0,0.0,0.0,0.0,0.0),c(326.70281689031555,285.54622525640883,373.4562687370559,93.61138320693794,219.6272640267079,160.49325210255392),c(233.46241118489365,243.2430807739779,201.83114523657065,189.75280379784718,104.03396717054585,84.00818664743056))
targetgene="ADAT3"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(31.80292907781833,8.13522009277518,19.222013832054348,0.0,0.0,23.823217108972848),c(143.83597469286016,178.16132003177646,170.25212251248138,97.40643928289488,111.25854822405597,15.04624238461443),c(26.743372179074505,13.829874157717807,10.984007904031056,31.625467299641198,0.0,0.0),c(70.11100273973587,86.23333298341691,59.72554297816887,31.625467299641198,89.5848050635256,23.823217108972848),c(16.624258381586856,29.28679233399065,39.817028652112576,120.17677573863655,0.0,0.0),c(141.6675931648271,108.1984272339099,134.55409682438045,118.9117570466509,53.46189979597495,31.346338301280063))
targetgene="EIF2B2"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(100.46834413219881,56.94654064942626,94.73706817226785,34.15550468361249,41.902570110358745,38.86945949358728),c(20.2382275949753,18.711006213382916,10.984007904031056,0.0,0.0,0.0),c(163.35140844515777,212.3292444214322,194.96614029655126,91.08134582296665,62.131397060187105,132.90847439742748),c(157.56905770373626,197.68584825443688,201.14464474256872,201.137972025718,34.67798905684862,21.315510044870443),c(87.45805496400041,102.50377316896727,111.21308002831445,242.8835888612444,33.23307284614659,62.69267660256013),c(424.2799856518036,441.7424510376923,450.3443240652733,258.0638131650722,288.98324214040514,160.49325210255392))
targetgene="MARS2"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(170.5793468719347,126.09591143801529,152.40310966843091,239.08853278528744,20.22882694982836,76.48506545512336),c(18.792639909619922,13.016352148440289,24.714017784069878,0.0,0.0,0.0),c(135.8852424234056,89.48742102052698,120.82408694434162,72.10606544318193,31.788156635444565,114.10067141665942),c(104.80510718826496,100.87672915041225,78.26105631622127,25.300373839712957,112.703464434758,22.569363576921646),c(95.40878723345499,122.0283013916277,107.0940770643028,97.40643928289488,24.563575581934437,66.45423719871374),c(309.355764666051,290.4273573120739,216.93415610461335,327.6398412242828,176.27977770564712,161.74710563460513))
targetgene="NOP10"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(109.14187024433109,86.23333298341691,67.96354890619216,31.625467299641198,28.898324214040514,120.36993907691544),c(189.3719867815546,156.19622578128346,157.89511362044644,78.43115890311017,69.35597811369723,119.11608554486423),c(84.56687959328966,86.23333298341691,107.78057755830474,0.0,78.02547537790939,56.423408942304114),c(237.7991742409598,255.44591091314066,156.52211263244254,89.816327130981,115.59329685616206,173.03178742306596),c(33.9713106058514,52.878930603038675,50.801036556143636,13.915205611842126,0.0,25.07707064102405),c(524.0255359413247,556.4490543458223,481.9233467893626,384.56568236363694,280.31374487619297,623.1652054294476))
targetgene="FARS2"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("URB2","SMAD4","EDC4","DDX6","RBM14","RPF2","RPS25","SBDS","NOC3L","GNL3")
# samplelabel=sub('.\\w+.\\w+$','',colnames(gstable)[startindex]);
samplelabel='T1D_1,T1D_2,T1D_3_vs_T0_1,T0_2,T0_3 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(475.5983484819196,429.5396208985295,389.24578009910056,437.6964674270342,365.5638013076125,537.9031652499659),c(178.53007914138925,176.53427601322142,170.9386230064833,216.3181963295458,667.5512893443358,565.4879429550923),c(63.60585815563666,55.31949663087123,47.36853408613393,88.55130843899535,173.38994528424308,156.73169150640032),c(158.29185154641397,130.9770434936804,128.37559237836297,165.71744865011988,260.0849179263646,389.948448467924),c(367.90206592294385,294.4949673584615,307.55222131286956,514.8626076381587,235.5213423444302,509.0645340127882),c(28.91175370710757,62.64119471436889,33.63852420609511,97.40643928289488,69.35597811369723,127.89306026922266))
targetgene="URB2"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(461.1424716283658,394.55817449959625,440.0468166552442,1181.5274583145952,754.2462619864574,840.0818664743057),c(242.85873113970362,261.1405649780833,237.5291709246716,498.41736464234526,319.32648256514767,264.56309526280376),c(184.31242988281076,191.17767218021675,223.79916104463277,340.2900281441393,284.64849350829905,285.8786053076742),c(505.23289603170485,435.23427496347216,433.8683122092267,1329.5346452769159,2015.6581139293257,1920.9036111024423),c(273.9388663748442,243.2430807739779,271.85419562476864,378.2405889037087,511.5003385885171,490.2567310320202),c(245.74990651041438,258.69999895025074,282.8382035287997,1473.7467761632797,1012.88626370212,1117.1834970576215))
targetgene="SMAD4"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(257.31460799325737,287.1732692749639,308.2387218068715,617.3291216889961,446.47910910692593,758.5813868909776),c(181.4212545121,169.21257792972375,185.35513338052408,422.5162431232064,371.3434661504206,241.9937316858821),c(164.79699613051315,174.09370998538887,120.13758645033968,230.2334019413879,471.0426846888604,412.51781204484564),c(130.82568552466176,143.9933956421207,160.6411155964542,234.02845801734486,128.59754275248028,213.15510044870445),c(125.76612862591794,61.01415069581385,90.61806520825621,87.2862897470097,135.82212380599043,304.68640828844224),c(14.455876853553786,10.575786120607734,8.238005928023291,116.3817196626796,57.79664842808103,0.0))
targetgene="EDC4"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(156.12347001838089,196.87232624515937,149.65710769242315,182.1626916459333,236.9662585551322,86.51589371153298),c(308.63297082337334,280.66509320074374,317.8497287228987,628.714289916867,573.6317356487042,817.512502897384),c(176.3616976133562,198.4993702637144,193.59313930854736,275.77407485287125,445.0341928962239,383.679180807668),c(427.8939548651921,404.3204386109265,461.3283319693044,1066.4107573439012,998.4371015950998,1026.9060427499348),c(6.505144584099204,28.47327032471313,21.281515314060172,0.0,5.779664842808103,0.0),c(464.7564408417542,487.2996835572333,451.7173250532772,933.5837946854082,576.5215680701083,983.0211691281428))
targetgene="DDX6"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(81.67570422257889,91.92798704835954,99.54257163028144,387.09571974760826,200.84335328758158,201.87041866024362),c(10.11911379748765,17.897484204105396,9.611006916027174,56.925841139354155,0.0,84.00818664743056),c(1.4455876853553786,0.0,0.0,0.0,10.11441347491418,0.0),c(111.31025177236415,170.02609993900128,107.0940770643028,54.39580375538286,248.52558824074842,114.10067141665942),c(137.33083010876098,117.1471693359626,95.4235686662698,225.17332717344533,239.85609097653628,297.163287096135),c(151.78670696231475,104.94433919679983,135.92709781238432,215.05317763756014,293.3179907725112,283.3708982435718))
targetgene="RBM14"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(101.1911379748765,110.63899326174246,123.57008892034938,269.448981392943,221.07218023740992,337.28660012177346),c(397.53661347272913,373.4066022583808,396.11078503911995,437.6964674270342,579.4114004915123,571.7572106153484),c(374.4072105070431,349.81446398933275,310.98472378287926,413.66111227930685,247.0806720300464,336.03274658972225),c(426.4483671798367,318.0871056275096,457.8958294992947,776.7214768791878,566.407154595194,835.0664523461008),c(93.24040570542192,91.11446503908202,96.11006916027175,251.73871970514392,148.82636970230865,199.3627115961412),c(31.80292907781833,39.049056445320865,63.15804544817858,193.54785987380413,106.9237995919499,105.32369669230101))
targetgene="RPF2"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(190.0947806242323,213.95628843998725,198.39864276656095,576.8485235454555,520.1698358527292,585.5495994679115),c(375.85279819239844,417.33679075936675,359.03975836301515,752.6861217314605,674.775870397846,787.4200181281552),c(40.4764551899506,15.456918176272843,28.833020748081523,110.05662620275136,180.6145263377532,10.03082825640962),c(0.0,0.0,2.746001976007764,0.0,7.2245810535101285,0.0),c(464.7564408417542,435.23427496347216,446.22532110126167,621.1241777649531,498.4960926921989,458.9103927307401),c(248.64108188112513,300.18962142340416,254.6916832747201,618.5941403809818,417.58078489288545,364.87137782689996))
targetgene="RPS25"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(86.73526112132272,132.60408751223545,105.03457558229698,309.92957953648374,260.0849179263646,173.03178742306596),c(271.04769100413347,288.8003132935189,267.0486921667551,528.7778132500008,592.4156463878305,565.4879429550923),c(63.60585815563666,91.92798704835954,69.33654989419604,185.95774772189023,166.16536423073296,72.72350485896975),c(80.23011653722351,115.52012531740756,72.0825518702038,63.250934599282395,154.60603454511676,159.23939857050271),c(123.59774709788488,132.60408751223545,133.8675963303785,287.15924308074204,232.63150992302613,165.50866623075873),c(407.6557272702168,341.6792438965576,400.2297880031316,552.8131683977281,469.59776847815834,516.5876552050954))
targetgene="SBDS"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(174.19331608532312,198.4993702637144,222.4261600566289,344.08508422009623,252.8603368728545,297.163287096135),c(181.4212545121,125.28238942873779,159.95461510245227,259.3288318570578,215.29251539460182,342.3020142499783),c(166.24258381586853,174.09370998538887,142.1056022584018,211.2581215616032,273.08916382268285,262.05538819870134),c(43.36763056066136,86.23333298341691,58.35254199016499,79.69617759509582,169.055196652137,247.0091458140869),c(208.16462669117453,207.44811236576712,240.27517290067937,356.7352711399527,352.55955541129424,364.87137782689996),c(0.0,0.0,0.0,0.0,0.0,0.0))
targetgene="NOC3L"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(210.33300821920758,208.26163437504462,212.81515314060172,161.92239257416293,404.5765389965672,397.4715696602312),c(135.8852424234056,153.7556597534509,111.21308002831445,277.0390935448569,221.07218023740992,208.1396863204996),c(14.455876853553786,40.676100463875905,26.08701877207376,244.14860755323005,169.055196652137,66.45423719871374),c(31.80292907781833,20.338050231937952,38.444027664108695,216.3181963295458,121.37296169897016,247.0091458140869),c(113.47863330039722,123.65534541018275,142.79210275240374,148.0071869623208,132.93229138458636,174.28564095511715),c(26.743372179074505,48.81132055665108,82.38005928023293,116.3817196626796,182.05944254845525,58.93111600640652))
targetgene="GNL3"
collabel=c("T0_1","T0_2","T0_3","T1D_1","T1D_2","T1D_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



dev.off()
Sweave("rra_T0vsT1D_summary.Rnw");
library(tools);

texi2dvi("rra_T0vsT1D_summary.tex",pdf=TRUE);

