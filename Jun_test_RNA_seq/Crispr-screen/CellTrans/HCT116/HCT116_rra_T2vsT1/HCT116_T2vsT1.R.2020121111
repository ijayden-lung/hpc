pdf(file='HCT116_T2vsT1.pdf',width=4.5,height=4.5);
gstable=read.table('HCT116_T2vsT1.gene_summary.txt',header=T)
# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("TARDBP","XPO6","ADAT3","TIAL1","RBM5","RPP21","RBM18","PTBP1","CCAR1","PAPOLA")
# samplelabel=sub('.\\w+.\\w+$','',colnames(gstable)[startindex]);
samplelabel='T1_1,T1_2,T1_3_vs_T2_1,T2_2,T2_3 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(268.72980919432905,286.05259976446865,262.0286886747868,277.3635238528195,207.06158309624638,302.5858672578922),c(161.6204190528171,161.3630049953413,165.71544094567597,110.71233094965484,113.93340696683413,177.72362685328002),c(49.72935970855911,60.14439277099085,52.405737734957356,18.063590839154212,11.888703335669648,13.67104821948308),c(242.90879549950026,198.03641522155522,263.4450599649208,63.51391617638094,107.9890552989993,88.40611181932391),c(122.41073159029935,85.08231172481632,120.39155966138853,74.58514927134642,76.28584640388024,60.15261216572555),c(226.65112021016364,274.3171084920802,249.28134706358094,85.6563823663119,92.13745085143977,89.31751503395611))
targetgene="TARDBP"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(75.55037340338788,74.81375686147642,96.31324772911083,74.58514927134642,80.24874751577012,82.93769253153069),c(315.5901673812405,264.0485536287403,327.18176802095,246.48061048265262,226.87608865569578,225.1165940141547),c(56.42369659240361,61.611329180039405,86.39864869817295,49.529200688003485,42.60118695281624,45.570160731610265),c(251.5158000644432,244.97838031110905,209.62295093982942,131.10670770353863,160.49749503154024,150.3815304143139),c(176.92176050160452,177.49930549487544,184.12826771741774,149.17029854269285,109.97050585494425,107.54557932660023),c(282.11848296201805,256.7138715834975,310.1853125393422,201.03028514542592,187.24707753679695,215.09115865320047))
targetgene="XPO6"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(278.29314759982117,262.58161721969174,281.8578867366625,145.09142319191608,162.47894558748519,194.12888471665974),c(162.57675289336632,156.9621957681956,162.882698365408,75.16784575002882,70.34149473604542,59.24120895109334),c(113.80372702535642,134.95814963246727,111.89333192058463,104.8853661628309,83.22092334968754,96.60874075101376),c(96.58971789547059,102.68554863339901,82.14953482777099,48.94650420932109,51.51771445456848,53.77278966330012),c(282.11848296201805,294.85421821876,236.5340054523751,208.02264288961464,210.03375893016377,227.85080365805132),c(0.0,0.0,0.0,0.0,0.0,0.0))
targetgene="ADAT3"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(396.8785438279237,359.39942021689654,378.1711344657734,402.6432667695342,462.6687048131438,444.76476874051616),c(81.28837644668316,101.21861222435045,106.2278467600487,48.94650420932109,51.51771445456848,51.0385800194035),c(255.34113542664005,265.5154900377889,249.28134706358094,149.75299502137526,172.3861983672099,138.5332886240952),c(255.34113542664005,250.84612594730328,283.27425802679653,195.20332035860196,176.34909947909978,211.44554579467163),c(47.81669202746068,60.14439277099085,60.903965475761254,30.88291337016688,31.70320889511906,20.962273936540722),c(266.81714151323064,296.3211546278086,267.6941738353227,239.4882527384639,207.06158309624638,221.47098115562588))
targetgene="TIAL1"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(133.8867376768899,143.7597680867586,113.30970321071861,96.7276154612774,98.0818025192746,89.31751503395611),c(145.36274376348047,115.88797631483602,117.55881708112057,65.26200561242813,73.31367056996282,68.3552410974154),c(50.68569354910832,41.0742194533596,41.074767413885496,23.30785914729576,22.786681393366827,32.81051572675939),c(327.06617346783105,327.12681921782826,270.5269164155907,220.8419654206273,243.7184183812278,208.71133615077503),c(53.55469507075597,45.475028680505275,65.1530793461632,44.28493237986194,32.693934173091534,45.570160731610265),c(194.13576963149038,155.49525935914707,222.37029255103528,115.9565992577964,153.56241808573296,109.36838575586464))
targetgene="RBM5"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(75.55037340338788,61.611329180039405,72.23493579683311,40.20605702908518,35.666110007008946,47.392967160874676),c(113.80372702535642,139.35895885961293,128.8897874021924,97.89300841864218,131.7664619703386,94.78593432174935),c(41.12235514361619,52.80971072574806,41.074767413885496,34.379092242261244,40.619736396871296,33.72191894139159),c(92.76438253327373,57.21051995289373,65.1530793461632,30.88291337016688,37.647560562953885,26.430693224333954),c(81.28837644668316,123.22265836007881,83.56590611790497,52.44268308141545,44.58263750876118,54.68419287793232),c(69.8123703600926,57.21051995289373,70.81856450669913,40.788753507767574,46.56408806470612,33.72191894139159))
targetgene="RPP21"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(497.2935970855911,529.5640436665292,524.0573773495736,283.19048863964343,356.66110007008945,308.0542865456854),c(93.72071637382294,92.41699377005911,97.72961901924481,57.686951389557,51.51771445456848,62.88682180962216),c(150.14441296622655,132.02427681437015,114.72607450085259,76.3332387073936,95.10962668535718,79.29207967300187),c(119.5417300686517,124.68959476912737,135.97164385286234,109.54693799229005,95.10962668535718,105.72277289733582),c(103.28405477931507,77.74762967957354,126.05704482192446,103.71997320546612,69.35076945807295,61.97541859498996),c(196.0484373125888,234.70982544776916,199.70835190889156,173.64355064735338,161.4882203095127,163.14117541916474))
targetgene="RBM18"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(478.1669202746068,445.9486683507614,461.7370405836783,460.3302181590912,402.2344628568231,477.5752844672756),c(58.336364273502035,74.81375686147642,52.405737734957356,31.465609848849272,32.693934173091534,79.29207967300187),c(60.24903195460046,55.743583543845176,46.740252574421426,29.71752041280209,33.684659451064,19.13946750727631),c(18.17034297043506,20.5371097266798,29.743797092813637,8.157750701553516,26.749582505256708,9.114032146322053),c(71.72503804119103,68.94601122528219,77.90042095736905,17.48089436047182,31.70320889511906,17.3166610780119),c(111.891059344258,99.7516758153019,76.48404966723507,29.134823934119698,15.85160444755953,42.83595108771365))
targetgene="PTBP1"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(156.83874985007105,170.16462344963264,128.8897874021924,146.83951262796327,103.03542890913695,126.68504683387654),c(231.4327894129097,230.3090162206235,245.032233193179,147.42220910664565,140.68298947209084,132.15346612166977),c(364.3631932492504,338.8623104902167,352.67645124336167,315.2387949671751,298.2083086697137,266.12973867260393),c(451.38957273922887,431.2793042602758,456.0715554231424,370.59496044200256,373.50342979562146,432.9165269502975),c(174.05275897995688,184.83398754011822,167.13181223580995,146.83951262796327,132.75718724831108,150.3815304143139),c(0.0,0.0,0.0,0.0,0.0,0.0))
targetgene="CCAR1"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(97.54605173601979,99.7516758153019,97.72961901924481,60.60043378296897,71.33222001401789,67.44383788278319),c(285.9438183242149,294.85421821876,294.6052283478684,298.9232935640681,263.5329239406772,305.32007690178875),c(210.393444920827,247.9122531292062,239.36674803264307,207.43994641093224,187.24707753679695,184.10344935570546),c(331.84784267057717,290.4534089916143,286.1070006070645,292.51363229856173,231.82971504555815,294.38323832620233),c(147.2754114445789,171.63155985868121,194.04286674835564,128.77592178880906,123.84065974655883,100.25435360954259),c(237.170792456205,242.04450749301196,182.71189642728376,178.30512247681256,143.65516530600826,172.2552075654868))
targetgene="PAPOLA"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("DDX6","SMAD4","TNPO1","SUZ12","EZH2","EDC4","AFF4","DGCR8","DICER1","TNRC6A")
# samplelabel=sub('.\\w+.\\w+$','',colnames(gstable)[startindex]);
samplelabel='T1_1,T1_2,T1_3_vs_T2_1,T2_2,T2_3 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \\n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \\n',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(365.31952708979964,354.9986109897509,396.58396123751515,972.5204229209155,911.467255734673,893.1751503395612),c(109.97839166315957,142.29283167771007,124.64067353179047,184.71478374231887,205.08013254030143,164.05257863379694),c(156.83874985007105,181.9001147220211,150.13535675420215,358.3583343896723,440.87274869774944,449.3217848136772),c(380.62086853858705,371.134911489285,385.2529909164433,576.2868174168876,586.5093645597026,690.8436366912116),c(318.45916890288817,259.64774440159465,253.5304609339829,548.3173864401327,668.7395626314177,642.5392663157047),c(21.995678332631915,14.669364090485573,18.412826771741774,29.134823934119698,12.87942861364212,19.13946750727631))
targetgene="DDX6"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(221.86945100741758,174.5654326767783,222.37029255103528,418.37607169395886,391.3364847991259,392.81478550648046),c(182.65976354489982,195.10254240345813,157.21721320487208,228.41701964349843,257.5885722728424,222.38238437025808),c(132.9304038363407,137.89202245056438,151.55172804433616,187.62826613573085,168.42329725532002,198.68590078982075),c(327.06617346783105,356.4655473987994,342.76185221242383,430.03000126760674,399.2622870229057,470.2840587502179),c(356.7125225248567,466.4857780774412,390.91847607697923,801.2076581882917,661.8044856856104,730.0339749203964),c(174.05275897995688,190.70173317631244,191.21012416808765,217.92848302721532,270.4680008864845,234.23062616047676))
targetgene="SMAD4"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(350.0181856410122,410.74219453359603,371.08927801510345,533.7499744730728,468.6130564809786,527.7024612720469),c(114.76006086590564,132.02427681437015,114.72607450085259,158.49344220161115,152.57169280776048,183.19204614107326),c(92.76438253327373,126.15653117817592,106.2278467600487,133.4374936182682,178.33055003504472,113.01399861439346),c(163.53308673391552,171.63155985868121,133.13890127259438,231.9131985155928,197.15433031652165,252.45869045312088),c(154.9260821689726,170.16462344963264,172.7972973963459,343.20822594393,294.2454075578238,335.39638298465155),c(130.06140231469305,134.95814963246727,117.55881708112057,230.1651090795456,192.20070392665932,218.73677151172927))
targetgene="TNPO1"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(233.34545709400814,271.3832356739831,239.36674803264307,360.68912030440185,380.43850674142874,349.97883441876684),c(337.5858457138724,350.5978017626052,359.7583076940316,417.79337521527646,470.5945070369236,398.28320479427373),c(277.336813759272,261.1146808106432,283.27425802679653,390.9893371958863,375.4848803515664,398.28320479427373),c(172.14009129885847,239.11063467491482,230.86852029183916,300.08868652143286,276.41235255431934,216.91396508246487),c(211.34977876137623,211.23884290299225,161.46632707527402,298.3405970853857,294.2454075578238,338.1305926285482),c(166.40208825556317,176.03236908582687,184.12826771741774,220.8419654206273,216.96883587597108,172.2552075654868))
targetgene="SUZ12"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(315.5901673812405,330.0606920359254,341.3454809222898,471.40145125405667,402.2344628568231,373.6753179992042),c(117.62906238755328,108.55329426959324,130.3061586923264,168.39928233921185,194.18215448260426,166.78678827769357),c(368.1885286114473,378.4695935345278,420.66227316979285,495.2920068800348,505.26989176596004,534.9936869891045),c(237.170792456205,227.37514340252636,247.86497577344696,337.96395763578846,338.828045066585,267.95254510186834),c(15.301341448787419,13.202427681437015,14.163712901339826,22.725162668613365,20.805230837421885,16.405257863379695),c(72.68137188174023,77.74762967957354,107.64421805018269,124.6970464380323,122.84993446858637,143.09030469725624))
targetgene="EZH2"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(155.88241600952182,192.168669585361,158.63358449500606,223.17275133535688,224.89463809975084,254.28149688238528),c(80.33204260613395,48.40890149860239,72.23493579683311,90.90065067445346,83.22092334968754,124.86224040461212),c(369.14486245199646,377.00265712547923,354.0928225334957,583.2791751610763,666.7581120754728,698.1348624082692),c(281.1621491214688,246.44531672015762,219.53754997076732,447.5108956280785,463.6594300911163,452.05599445757383),c(238.1271262967542,244.97838031110905,178.46278255688182,319.31767031795187,293.2546822798513,375.4981244284686),c(15.301341448787419,14.669364090485573,29.743797092813637,29.134823934119698,15.85160444755953,24.607886795069543))
targetgene="EDC4"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(319.41550274343734,319.7921371725855,337.09636705188785,460.9129146377736,376.47560562953885,403.75162408206694),c(126.2360669524962,134.95814963246727,164.29906965554198,171.8954612113062,196.1636050385492,154.0271432728427),c(265.8608076726814,237.64369826586628,192.62649545822165,256.38645062025336,362.6054517379243,310.788496189582),c(76.50670724393709,73.34682045242786,82.14953482777099,103.71997320546612,112.94268168886165,61.97541859498996),c(50.68569354910832,67.47907481623363,42.49113870401948,63.51391617638094,69.35076945807295,79.29207967300187),c(197.00477115313802,196.56947881250667,226.61940642143722,244.73252104660546,239.7555172693379,254.28149688238528))
targetgene="AFF4"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(6.694336883844496,14.669364090485573,9.914599030937879,16.898197881789425,29.72175833917412,26.430693224333954),c(133.8867376768899,159.89606858629276,124.64067353179047,230.747805558228,151.580967529788,173.16661078011902),c(135.79940535798835,112.95410349673891,114.72607450085259,202.7783745814731,206.0708578182739,182.28064292644106),c(6.694336883844496,4.400809227145672,1.4163712901339827,6.409661265506333,10.897978057697177,6.379822502425437),c(189.35410042874432,186.30092394916676,236.5340054523751,240.0709492171463,255.60712171689744,303.49727047252435),c(93.72071637382294,117.35491272388458,101.97873288964675,152.6664774147872,168.42329725532002,137.621885409463))
targetgene="DGCR8"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(279.2494814403704,319.7921371725855,246.44860448331298,243.56712808924067,272.44945144242945,273.4209643896616),c(133.8867376768899,127.62346758722448,133.13890127259438,226.66893020745124,195.17287976057673,167.69819149232578),c(284.03115064311646,296.3211546278086,259.19594609451883,449.25898506412574,362.6054517379243,337.21918941391596),c(194.13576963149038,190.70173317631244,191.21012416808765,170.73006825394143,232.82044032353062,186.8376589996021),c(87.02637948997844,95.35086658815622,126.05704482192446,153.24917389346962,196.1636050385492,210.53414258003943),c(150.14441296622655,114.42103990578747,184.12826771741774,312.32531257376314,295.23613283579624,298.9402543993633))
targetgene="DICER1"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(121.45439774975013,115.88797631483602,130.3061586923264,214.43230415512096,213.0059347640812,197.77449757518855),c(310.80849817849446,338.8623104902167,277.6087728662606,291.348239341197,303.161935059576,294.38323832620233),c(97.54605173601979,93.88393017910767,118.97518837125455,131.10670770353863,106.00760474305436,141.2674982679918),c(99.45871941711822,123.22265836007881,90.64776256857489,173.64355064735338,164.46039614343013,148.55872398504945),c(129.10506847414385,115.88797631483602,109.06058934031667,120.61817108725555,118.88703335669648,124.86224040461212),c(341.4111810760693,352.06473817165374,348.42733737295976,647.3757878161397,600.3795184513173,586.9436702231402))
targetgene="TNRC6A"
collabel=c("T2_1","T2_2","T2_3","T1_1","T1_2","T1_3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



dev.off()
Sweave("HCT116_T2vsT1_summary.Rnw");
library(tools);

texi2dvi("HCT116_T2vsT1_summary.tex",pdf=TRUE);

