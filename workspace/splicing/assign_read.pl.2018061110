#!/usr/bin/perl -w
#PBS -q ser
#PBS -N assign
#PBS -l nodes=1:ppn=1
#PBS -j oe 
#PBS -l walltime=48:00:00

#sample=(RM-ES-P28-1  RM-ES-P28-2  RM-ES-P28-3  RM-MEF-P13-1  RM-MEF-P13-2  RM-MEF-P14-1  RM-MEF-P14-2)
#my $sample= "RM-ES-P28-1";
#my $dir = "/home/bio-longyk/workspace/splicing";
my ($sample,$dir) = @ARGV;

my $sam1 =  "$dir/mouse/STAR/$sample/Aligned.sortedByCoord.out.bam";
my $sam2 =  "$dir/rat/STAR/$sample/Aligned.sortedByCoord.out.bam";

my $mouseHeader = `samtools view -H $sam1`;
my $ratHeader = `samtools view -H $sam2`;


my $mouseRead = 0;
my $ratRead =   0;
my $comRead = 0;
open A2M,">$dir/mouse/assign/A2M_$sample.sam";
open A2R,">$dir/rat/assign/A2R_$sample.sam";
open C2M,">$dir/mouse/common/C2M_$sample.sam";
open C2R,">$dir/rat/common/C2R_$sample.sam";
print A2M $mouseHeader;
print A2R $ratHeader;
print C2M $mouseHeader;
print C2R $ratHeader;
my %a2m;
my %a2r;
my %c2m;
my %c2r;

open MOU,"samtools view -f 67 $sam1 | awk '{print \$1,\$14}' |";
my %mouseScore;
while(<MOU>){
	chomp;
	my ($read,$AS) = split;
	my ($score) = (split /:/,$AS)[2];
	$mouseScore{$read} = $score;
}




my $onlyRat;
open RAT,"samtools view -f 67 $sam2 | awk '{print \$1,\$14}' |";
my %ratScore;
while(<RAT>){
	chomp;
	my ($read,$AS) = split;
	my ($score) = (split /:/,$AS)[2];
	$ratScore{$read} = $score;
	if(!exists $mouseScore{$read}){
		$a2r{$read} = '';
		$ratRead++;
		$onlyRat++;
	}
}


my $onlyMou;
while(my ($read,$score) = each %mouseScore){
	if(exists $ratScore{$read}){
		if($score > $ratScore{$read}){
			$a2m{$read} = '';
			$mouseRead++;
		}
		elsif($score < $ratScore{$read}){
			$a2r{$read} = '';
			$ratRead++;
		}
		else{
			$c2r{$read} = '';
			$c2m{$read} = '';
			$comRead++;
		}
	}
	else{
		$a2m{$read} = '';
		$mouseRead++;
		$onlyMou++;
	}
}


open MOU,"samtools view $sam1 |";
while(<MOU>){
	chomp;
	my ($read) = split;
	if(exists $a2m{$read}){
		print A2M "$_\n";
	}
	elsif(exists $c2m{$read}){
		print C2M "$_\n";
	}
}

open RAT,"samtools view $sam2 |";
while(<RAT>){
	chomp;
	my ($read) = split;
	if(exists $a2r{$read}){
		print A2R "$_\n";
	}
	elsif(exists $c2r{$read}){
		print C2R "$_\n";
	}
}




print "Assign2Mouse\t$mouseRead\nAssign2Rat\t$ratRead\nCommon\t$comRead\n";
print "onlyRat\t$onlyRat\nonlyMouse\t$onlyMou\n";


system("samtools sort $dir/mouse/assign/A2M_$sample.sam -O bam -o $dir/mouse/assign/A2M_$sample.sorted.bam");
system("samtools sort $dir/rat/assign/A2R_$sample.sam -O bam -o $dir/rat/assign/A2R_$sample.sorted.bam");
system("samtools index $dir/mouse/assign/A2M_$sample.sorted.bam");
system("samtools index $dir/rat/assign/A2R_$sample.sorted.bam");

system("samtools sort $dir/mouse/common/C2M_$sample.sam -O bam -o $dir/mouse/common/C2M_$sample.sorted.bam");
system("samtools sort $dir/rat/common/C2R_$sample.sam -O bam -o $dir/rat/common/C2R_$sample.sorted.bam");
system("samtools index $dir/mouse/common/C2M_$sample.sorted.bam");
system("samtools index $dir/rat/common/C2R_$sample.sorted.bam");

system("rm $dir/rat/assign/*sam");
system("rm $dir/mouse/assign/*sam");
system("rm $dir/rat/common/*sam");
system("rm $dir/mouse/common/*sam");
