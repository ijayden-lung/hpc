#!/usr/bin/perl -w
use Statistics::R;

my %go;

open GO,'GO-0007155 cell adhesion.txt';
<GO>;
while(<GO>){
	chomp;
	my ($gene_id) = split;
	$go{$gene_id} = "adhesion";
}

open GO,'GO-0003012 muscle system process.txt';
<GO>;
while(<GO>){
	chomp;
	my ($gene_id) = split;
	if(exists $go{$gene_id}){
		$go{$gene_id} = "overlap";
	}
	else{
		$go{$gene_id} = "muscle";
	}
}

open GO,'GO-0034330 cell junction organization.txt';
<GO>;
while(<GO>){
	chomp;
	my ($gene_id) = split;
	if(exists $go{$gene_id}){
		#if($go{$gene_id} =~ /overlap/){
			$go{$gene_id} = "overlap";
			#}
	}
	else{
		$go{$gene_id} = "junction";
	}
}

my %sig;
open GO,'ASE_sig.txt';
while(<GO>){
	chomp;
	my ($gene_id) = split /\t/;
	$sig{$gene_id} = "Sig_Diff_ASE";
}



open ASE, 'Prost_Alt_Splicing_qvalue.tsv';
open DE,  'Prost_Results.tsv';
<ASE>;
<DE>;

my %ase;
while(<ASE>){
	chomp;
	my($gene_id,$perDiff) = (split /\t/)[0,6];
	if(exists $ase{$gene_id} && $ase{$gene_id} < $perDiff){
		$ase{$gene_id} = $perDiff;
	}
	elsif(!exists $ase{$gene_id}){
		 $ase{$gene_id} = $perDiff;
	 }
}


#while(my ($key,$val) = each %ase){
	#print "$key\t$val\n" if(exists $sig{$key});;
#}


my %de;
while(<DE>){
	chomp;
	my ($gene_id,undef,$lfc) = split /\t/;
	$de{$gene_id} = $lfc;
}

open BG, '../table_ReadCount.tsv';
<BG>;
my %bg;
while(<BG>){
	chomp;
	my ($gene_id) = split /\t/;
	$bg{$gene_id} = ''; #if(exists $sig{$gene_id});
}


open OUT,'>CombineProst.tsv';
print OUT "gene_id\tMaxPercentDiff\tLog2FoldChange\tGO\n";
foreach my $gene_id (keys %bg){
	if(exists $ase{$gene_id}){
		if(exists $go{$gene_id}){
			print OUT "$gene_id\t$ase{$gene_id}\t$de{$gene_id}\t$go{$gene_id}\n";
		}
		else{
			print OUT "$gene_id\t$ase{$gene_id}\t$de{$gene_id}\tOthers\n";
		}
	}
	else{
		if(exists $go{$gene_id}){
			print OUT "$gene_id\t0\t$de{$gene_id}\t$go{$gene_id}\n";
		}
		else{
			print OUT "$gene_id\t0\t$de{$gene_id}\tOthers\n";
		}
	}
}



#######R Commands
my $cmds = <<EOF;
library(ggplot2)
data <-read.table("CombineProst.tsv",sep="\t",header=T)
data <- data[data\$GO != "Others",]
pdf(file = "ScatterPlotProst_sig.pdf")
ggplot(data, aes(x = MaxPercentDiff, y = Log2FoldChange,colour=GO))+geom_point()
EOF
######End R Commands

# Create a communication bridge with R and start R
my $R = Statistics::R->new();
$R->run($cmds);			####calculate the pvalue in R
