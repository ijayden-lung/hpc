#!/usr/bin/perl -w

my ($sample) = @ARGV;

my $mouseHeader = `samtools view -H mouse/$sample/Aligned.sortedByCoord.out.bam `;
my $ratHeader = `samtools view -H rat/$sample/Aligned.sortedByCoord.out.bam `;


open MOU,"samtools view mouse/$sample/Aligned.sortedByCoord.out.bam |";
my %mouseScore;
my %mouseRead;
while(<MOU>){
	chomp;
	my ($read,$AS) = (split /\t/)[0,-3];
	my ($score) = (split /:/,$AS)[2];
	$mouseScore{$read} = $score;
	$mouseRead{$read} .= "$_\n";
}



my $mouseRead = 0;
my $ratRead =   0;
my $comRead = 0;
open A2M,">mouse/assign/A2M_$sample.sam";
open A2R,">rat/assign/A2R_$sample.sam";
open C2M,">mousse/common/C2M_$sample.sam";
open C2R,">rat/common/C2R_$sample.sam";
print A2M $mouseHeader;
print A2R $ratHeader;


my $onlyRat;
open RAT,"samtools view rat/STAR/$sample/Aligned.sortedByCoord.out.bam |";
my %ratScore;
my %ratRead;
while(<RAT>){
	chomp;
	my ($read,$AS) = (split /\t/)[0,-3];
	my ($score) = (split /:/,$AS)[2];
	$ratScore{$read} = $score;
	$ratRead{$read} .= "$_\n";
	if(!exists $mouseScore{$read}){
		print A2R "$ratRead{$read}";
		$ratRead++;
		$onlyRat++;
	}
}


my $onlyMou;
while(my ($read,$score) = each %mouseScore){
	if(exists $ratScore{$read}){
		if($score > $ratScore{$read}){
			print A2M "$mouseRead{$read}";
			$mouseRead++;
		}
		elsif($score < $ratScore{$read}){
			print A2R "$ratRead{$read}";
			$ratRead++;
		}
		else{
			print C2M "$mouseRead{$read}";
			print C2R "$ratRead{$read}";
			$comRead++;
		}
	}
	else{
		print A2M "$mouseRead{$read}";
		$mouseRead++;
		$onlyMou++;
	}
}

print "Assign2Mouse\t$mouseRead\nAssign2Rat\t$ratRead\nCommon\t$comRead\n";
print "onlyRat\t$onlyRat\nonlyMouse\t$onlyMou\n";


system("samtools sort mouse/assign/A2M_$sample.sam -O bam -o mouse/assign/A2M_$sample.sorted.bam");
system("samtools sort rat/assign/A2R_$sample.sam -O bam -o rat/assign/A2R_$sample.sorted.bam");
system("samtools index mouse/assign/A2M_$sample.sorted.bam");
system("samtools index rat/assign/A2R_$sample.sorted.bam");
system("rm rat/assign/*sam");
system("rm mouse/assign/*sam");

