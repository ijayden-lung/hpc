#!/bin/bash

nodes=1
ppn=18
threads=$[$nodes*$ppn]
cat >star.sh << EOF
#!/bin/bash
#PBS -q fatser
#PBS -N STAR
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -o \${out}
#PBS -j oe 
#PBS -l walltime=06:00:00

if [ ! -d \${inp} ];then
	mkdir -p \${inp}
fi
cd \$inp

echo 'starting mapping with STAR'
STAR --twopassMode Basic --runThreadN $threads --genomeDir /home/bio-longyk/cnda/STAR_INDEX/\$genomeIndex  --readFilesIn \$fq1 \$fq2 --outSAMtype BAM SortedByCoordinate --outSAMattrIHstart 0  --outFilterMultimapScoreRange 0  --alignEndsType EndToEnd  --readFilesCommand zcat --outFilterIntronMotifs RemoveNoncanonicalUnannotated --outSAMstrandField intronMotif --outReadsUnmapped Fastx
#STAR --runThreadN $threads --genomeDir ~/cnda/STAR_INDEX/GFP  --readFilesIn \$fq1 \$fq2   --alignEndsType EndToEnd  --readFilesCommand zcat
#bowtie -p 18 -q -n 3 -l 23 --best ~/cnda/bt1_index/gfp --al -1 \$fq1 -2 \$fq2  -S >gfp.sam


####INDEX for sorted bam file
echo 'generating index with samtools'
samtools index -@ $threads Aligned.sortedByCoord.out.bam

EOF

dir='/home/bio-longyk/workspace/splicing/colon'
if [ ! -d $dir/GFP ];then
	mkdir -p $dir/GFP
fi

#sample=('WntHighEpi1' 'WntHighEpi2')
genomeIndex="hg38v92len149"
genome="hg38"
for file in $dir/fastq/*_1.fq.gz
#for sam in ${sample[*]}
do
	sam=${file##*\/}
	sam=${sam/_1.fq.gz/}
	echo $sam
	inp=$dir/GFP/$sam
	out=log_$sam
	fq1=$dir/fastq/${sam}_1.fq.gz
	fq2=$dir/fastq/${sam}_2.fq.gz
	qsub -v inp=$inp,out=$out,fq1=$fq1,fq2=$fq2,sam=$sam,genome=$genome,genomeIndex=$genomeIndex star.sh
done

#./merge_log.pl tead1
