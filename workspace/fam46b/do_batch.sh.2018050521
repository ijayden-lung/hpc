#!/bin/bash

nodes=1
ppn=12
threads=$[$nodes*$ppn]
cat >star.sh << EOF
#!/bin/bash
#PBS -q cal
#PBS -N STAR
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -o \${out}
#PBS -j oe 
#PBS -l walltime=03:00:00

mkdir \${inp}
cd \$inp

echo 'STAR mapping'
STAR --twopassMode Basic --runThreadN $threads --genomeDir /home/bio-longyk/cnda/STAR_INDEX/hg38  --readFilesIn \$fq1 \$fq2 --outSAMtype BAM SortedByCoordinate --outSAMattrIHstart 0  --outFilterMultimapScoreRange 0  --alignEndsType EndToEnd  --readFilesCommand zcat --outFilterIntronMotifs RemoveNoncanonicalUnannotated  
####INDEX for sorted bam file
echo 'generating index'
samtools index -@ $threads Aligned.sortedByCoord.out.bam

######Gene Abundance
echo 'Count Gene Read Count'
/home/bio-longyk/workspace/fam46b/feature_count.r
#python -m HTSeq.scripts.count --mode=union -s reverse -r pos  -f bam  Aligned.sortedByCoord.out.bam /home/lyk/data1/cnda/ensembl/hg38.ensemblv89.nopsuedo.gtf  >htseq.reverse.count 

EOF


#sample=("S6_combined" "S7_combined" "S5_combined")
sample=("S6_combined")
for sam in ${sample[*]}
do
	inp=/home/bio-longyk/workspace/fam46b/STAR/$sam
	out=log_$sam
	fq1=/home/bio-longyk/workspace/fam46b/${sam}_R1.fastq.gz
	fq2=/home/bio-longyk/workspace/fam46b/${sam}_R2.fastq.gz
	qsub -v inp=$inp,out=$out,fq1=$fq1,fq2=$fq2,readLen=$readLen star.sh
done


