#!/usr/bin/perll -w

my $foldChange = 2;
my $minRead    = 100;

open FILE,'mKO_293R_target.tsv';
<FILE>;
my %enrichGFPN_1;
my %enrichGFPN_2;
my %enrichGFPN_3;
my %enrichGFPP_1;
my %enrichGFPP_2;
my %enrichGFPP_3;
my $Day15;

while(<FILE>){
	chomp;
	my ($target,$gfpp_1,$gfpp_2,$gfpp_3,$gfpn_1,$gfpn_2,$gfpn_3,$total_1,$total_2,$total_3) = split;
	$Total{$target} = ($total_1+$total_2)/2;

	if($gfpn_1 >$minRead){
		#if($gfpn_1/($total_1+0.01) >$foldChange){
			$enrichGFPN_1{$target} = $gfpn_1;
			#}
	}
	if($gfpn_2 >$minRead){
		#if($gfpn_2/($gfpp_2+0.01) >$foldChange){
			$enrichGFPN_2{$target} = $gfpn_2;
			#}
	}
	if($gfpn_3 >$minRead){
		#if($gfpn_3/($gfpp_3+0.01) >$foldChange){
			$enrichGFPN_3{$target} = $gfpn_3;
			#}
	}
	if($gfpp_1 >10*$minRead){
		#if($total_1/($gfpp_1+0.01) >$foldChange){
			$enrichGFPP_1{$target} = $gfpp_1;
			#}
	}
	if($gfpp_2 >10*$minRead){
		#if($total_2/($gfpp_2+0.01) >$foldChange){
			$enrichGFPP_2{$target} = $gfpp_2;
			#}
	}
	if($gfpp_3 >10*$minRead){
		#if($total_3/($gfpp_3+0.01) >$foldChange){
			$enrichGFPP_3{$target} = $gfpp_3;
			#}
	}
}

my ($inter5) = &Venn(\%enrichGFPN_1,\%enrichGFPN_2,\%enrichGFPN_3,"GFP- VS total Enrichment") ;
#&Gene($inter5);
my ($inter6,$union) = &Venn(\%enrichGFPP_1,\%enrichGFPP_2,\%enrichGFPP_3,"GFP+ VS total Enrichment") ;
&Gene2($union);

sub Venn{
	my %interset;
	my %union;
	my ($ref1,$ref2,$ref3,$info) = @_;
	my %enrich_1 = %$ref1;
	my %enrich_2 = %$ref2;
	my %enrich_3 = %$ref3;
	my @Venn = (0,0,0,0,0,0,0);
	foreach my $key (keys %enrich_1){
		$union{$key} += $enrich_1{$key};
		$Venn[0]++;
		if(exists $enrich_2{$key}){
			$Venn[3]++;
			if(exists $enrich_3{$key}){
				$Venn[6]++;
				$interset{$key} = ($enrich_1{$key}+$enrich_2{$key}+$enrich_3{$key})/3;
			}
		}
	}
	foreach my $key (keys %enrich_2){
		$Venn[1]++;
		$union{$key} += $enrich_2{$key};
		if(exists $enrich_3{$key}){
			$Venn[4]++;
		}
	}
	foreach my $key (keys %enrich_3){
		$Venn[2]++;
		$union{$key} += $enrich_3{$key};
		if(exists $enrich_1{$key}){
			$Venn[5]++;
		}
	}
	print "$info\n";
	print "plot(Venn(SetNames = c('Rep1', 'Rep2','Rep3'), Weight=c('100'=$Venn[0],'010'=$Venn[1],'001'=$Venn[2],'110'=$Venn[3],'011'=$Venn[4],'101'=$Venn[5],'111'=$Venn[6])),doWeights = TRUE)\n";

	return (\%interset,\%union);
}


sub Gene2{
	my ($ref) = @_;
	open FILE, 'Human_Lib.csv';
	<FILE>;
	print "\n";
	my %gene;
	my %count;
	my %target;
	while(<FILE>){
		chomp;
		my ($gene,$target) = (split /,/)[1,3];
		if (exists $ref->{"G$target"}){ 
			 $gene{$gene} .= "G$target\t";
			 $count{$gene}++;
			 $target{"G$target"} = $ref->{"G$target"};
		}
		elsif(exists $ref->{$target}){
			$gene{$gene} .= "$target\t";
			$count{$gene}++;
			$target{$target} = $ref->{"$target"};
		}
	}
	my $i=0;
	foreach my $key (sort {$count{$b}<=>$count{$a}} keys %count){
		$i++;
		foreach my $target (split /\t/,$gene{$key}){
			my $enrich = log($target{$target}/$Total{$target})/log(2);
			print "$key\t$target\t$target{$target}\t$Total{$target}\t$enrich\n";
		}
	}
	print "$i\n";
	print "\n";
}


sub Gene{
	my ($ref) = @_;
	open FILE, 'Human_Lib.csv';
	<FILE>;
	print "\n";
	my %gene;
	while(<FILE>){
		chomp;
		my ($gene,$target) = (split /,/)[1,3];
		if (exists $ref->{"G$target"} && $ref->{"G$target"}/($Total{"G$target"}+0.01)>$foldChange){ 
			 $gene{"$target\t$gene"} = $ref->{"G$target"};
		}
		elsif(exists $ref->{$target} && $ref->{$target}/($Total{$target}+0.01)>$foldChange){
			$gene{"$target\t$gene"} = $ref->{$target};
		}
	}
	my $i=0;
	foreach my $key (sort {$gene{$b}<=>$gene{$a}} keys %gene){
		$i++;
		print "$key\t$gene{$key}\n";
	}
	print "$i\n";
	print "\n";
}
