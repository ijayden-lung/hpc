#!/bin/bash

nodes=1
ppn=18
threads=$[$nodes*$ppn]
cat >star.sh << EOF
#!/bin/bash
#PBS -q fat
#PBS -N STAR
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -o \${out}
#PBS -j oe 
#PBS -l walltime=06:00:00

if [ ! -d \${inp} ];then
	mkdir -p \${inp}
fi
cd \$inp

echo 'cut adapter'
cutadapt -j $threads --minimum-length=50 -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT -o \$trfq1 -p \$trfq2 \$fq1 \$fq2

echo 'starting mapping with STAR'

STAR --twopassMode Basic --runThreadN $threads --genomeDir /home/bio-longyk/cnda/STAR_INDEX/\$genomeIndex  --readFilesIn \$trfq1 \$trfq2 --outSAMtype BAM SortedByCoordinate --outSAMattrIHstart 0  --outFilterMultimapScoreRange 0  --alignEndsType EndToEnd  --readFilesCommand zcat --outFilterIntronMotifs RemoveNoncanonicalUnannotated --outSAMstrandField intronMotif --outWigType wiggle --outWigNorm None

####INDEX for sorted bam file
echo 'generating index with samtools'
samtools index -@ $threads Aligned.sortedByCoord.out.bam

######Gene Abundance
EOF


dir='/home/bio-longyk/workspace/shRNA/runx2_tead1' ####Need to be modified everytime
if [ ! -d $dir/STAR ];then
	mkdir -p $dir/STAR
fi

#sample=('WntHighEpi1' 'WntHighEpi2')   ##Modified
genomeIndex="hg38v92len149"				##Modified
genome="hg38"							##Modified
for file in $dir/fastq/*_R1.fq.gz		##Alternative
#for sam in ${sample[*]}				##Alternative
do
	sam=${file##*\/}					##Alternative
	sam=${sam/_R1.fq.gz/}	
	##Alternative
	inp=$dir/STAR/$sam
	out=log_$sam
	fq1=$dir/fastq/${sam}_R1.fq.gz
	fq2=$dir/fastq/${sam}_R2.fq.gz
	trfq1=$dir/fastq/${sam}.trim_R1.fq.gz
	trfq2=$dir/fastq/${sam}.trim_R2.fq.gz
	echo $sam
	qsub -v inp=$inp,out=$out,trfq1=$trfq1,trfq2=$trfq2,fq1=$fq1,fq2=$fq2,sam=$sam,genome=$genome,genomeIndex=$genomeIndex star.sh
done

#./merge_log.pl tead1					###Change Every qsub finis
