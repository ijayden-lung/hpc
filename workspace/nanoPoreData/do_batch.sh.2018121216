#!/bin/bash

nodes=1
ppn=18
threads=$[$nodes*$ppn]
cat >star.sh << EOF
#!/bin/bash
#PBS -q fat
#PBS -N STAR
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -o \${out}
#PBS -j oe 
#PBS -l walltime=06:00:00
#PBS -l mem=1500mb

if [ ! -d \${inp} ];then
	mkdir -p \${inp}
fi
cd \$inp

echo 'starting mapping with STAR'
#graphmap align -r /home/bio-longyk/cnda/lambda_phage.fa -d \$fq1 -o \$sam.sam
#graphmap owler -r \$fq1 -d \$fq1 -o overlaps_phage.mhap 
#graphmap owler -r \$fq1 -d \$fq1  -o overlaps_phage.paf -L paf  
#graphmap align -x overlap -r \$fq1 -d \$fq1  -o overlaps_phage.sam    
####INDEX for sorted bam file
#echo 'generating index with samtools'
#samtools sort -@ $threads \$sam.sam -o \$sam.sorted.bam
#samtools index -@ $threads \$sam.sorted.bam
#rm \$sam.sam
#qualimap bamqc -bam mapped2phage.sorted.bam -outformat PDF -outfile result.pdf -nt $threads #--java-mem-size=30M


### CANU
canu -p lambda -d lambda_nano genomeSize=48k -nanopore-raw ~/workspace/nanoPoreData/fastq/nanoPoreData.fastq
canu -p lambda -d all_nano -nanopore-raw ~/workspace/nanoPoreData/fastq/nanoPoreData.fastq

EOF


dir='/home/bio-longyk/workspace/nanoPoreData' ####Need to be modified everytime
if [ ! -d $dir/STAR ];then
	mkdir -p $dir/STAR
fi

for file in $dir/fastq/*fq		##Alternative
do
	sam=${file##*\/}	
	sam=${sam%.*}
	echo $sam
	inp=$dir/STAR/$sam
	out=log_$sam
	fq1=$file
	qsub -v inp=$inp,out=$out,fq1=$fq1,sam=$sam star.sh
done

