#!/usr/bin/perl -w

my ($colonUp,$colonDown) = &callDE('Colon');
my ($prostUp,$prostDown) = &callDE('Prost');
my ($lungUp,$lungDown)   = &callDE('Lung');

my ($overlapUp) = &Venn($colonUp,$prostUp,$lungUp,'Upregulation');
my ($overlapDown) = &Venn($colonDown,$prostDown,$lungDown,'Downregulation');

my %deGene;
while(my($key,$val) = each %$overlapUp){
	$deGene{$key} = $val;
}
while(my($key,$val) = each %$overlapDown){
	$deGene{$key} = $val;
}

my ($colonBG) = &backGround(\%deGene,'Colon');
my ($prostBG) = &backGround(\%deGene,'Prost');
my ($lungBG) =  &backGround(\%deGene,'Lung');

my ($bgGene) = &Venn($colonBG,$prostBG,$lungBG,'Background');



open SIG, ">DE_sig.txt";
print SIG "ensg\n";
foreach my $key (keys %deGene){
	print SIG "$key\n";
}

my %len;
open ANNO,'annotation.txt';
<ANNO>;
while(<ANNO>){
	chomp;
	my ($gene_id,$len) = (split /\t/)[1,6];
	$len{$gene_id} = $len;
}

open BG,  ">DE_bg.txt";
open LEN, ">DE_len.txt";
print BG "ensg\n";
foreach my $key (keys %$bgGene){
	print BG "$key\n";
	if(exists $len{$key}){
		print LEN "$len{$key}\n";
	}
}



sub backGround{
	my ($deGene,$tissue) = @_;
	my %background;
	my ($max,$min) = (0,10000);
	open FILE, $tissue.'_Results.tsv';
	<FILE>;
	while(<FILE>){
		chomp;
		my ($gene_id,$baseMean,$lfc,$stat,$pvalue,$padj) = split;
		if(exists $deGene->{$gene_id}){
			if($min > $baseMean){
				$min = $baseMean;
			}
			if($max < $baseMean){
				$max = $baseMean;
			}
		}
	}
	open FILE, $tissue.'_Results.tsv';
	<FILE>;
	while(<FILE>){
		chomp;
		my ($gene_id,$baseMean,$lfc,$stat,$pvalue,$padj) = split;
		if($min <= $baseMean && $max >= $baseMean){
			$background{$gene_id} = '';
		}
	}
	return (\%background);
}



sub callDE{
	my ($tissue) = @_;
	my %uprg;
	my %down;
	open ASE, $tissue.'_Results.tsv';
	<ASE>;
	while(<ASE>){
		chomp;
		my ($gene_id,$baseMean,$lfc,$stat,$pvalue,$padj) = split;
		if(abs($lfc) > 0.5 && $padj ne "NA" && $padj < 0.01){
			if($lfc>0.5){
				$uprg{$gene_id} = $lfc;
			}
			else{
				$down{$gene_id} = $lfc;
			}
		}
	}
	return (\%uprg,\%down);
}



sub Venn{
	my %interset;
	my ($ref1,$ref2,$ref3,$info) = @_;
	my %enrich_1 = %$ref1;
	my %enrich_2 = %$ref2;
	my %enrich_3 = %$ref3;
	my @Venn = (0,0,0,0,0,0,0);
	foreach my $key (keys %enrich_1){
		if(exists $enrich_2{$key}){
			if(exists $enrich_3{$key}){
				$Venn[6]++;
				$interset{$key} = '';
			}
			else{
				$Venn[3]++;
			}
		}
		else{
			if(exists $enrich_3{$key}){
				$Venn[5]++;
			}
			else{
				$Venn[0]++;
			}
		}
	}

	foreach my $key (keys %enrich_2){
		if(!exists $enrich_1{$key}){
			if(exists $enrich_3{$key}){
				$Venn[4]++;
			}
			else{
				$Venn[1]++;
			}
		}
	}

	foreach my $key (keys %enrich_3){
		if(!exists $enrich_1{$key} && !exists $enrich_2{$key}){
			$Venn[2]++;
		}
	}

	print "$info\n";
	print "plot(Venn(SetNames = c('Colon', 'Prostate','Lung'), Weight=c('100'=$Venn[0],'010'=$Venn[1],'001'=$Venn[2],'110'=$Venn[3],'011'=$Venn[4],'101'=$Venn[5],'111'=$Venn[6])),doWeights = TRUE)\n";

	return \%interset;
}
