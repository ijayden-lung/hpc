#!/usr/bin/perl -w
use Statistics::R;

sub sig{
	my ($sample,$bg) = @_;
	open ASE, "$sample/ASEvent.tsv";
	open DE,  "$sample/RC.tsv";
	<ASE>;
	<DE>;

	my %ase;
	while(<ASE>){
		chomp;
		my($gene_id,$perDiff,$info) = (split /\t/)[2,7,10];
		my $cond1 = 0;
		my $cond2 = 0;
		my $num = 0;
		foreach my $junc (split /;/,$info){
			my (undef,$rc) = split /,/,$junc;
			my ($low,$high) = split /\|/,$rc;
			$cond1 += $low;
			$cond2 += $high;
			$num++;
		}
		if(!exists $ase{$gene_id} && $perDiff ne "NA" && $cond1>$num*10 && $cond2>$num*10){
			$ase{$gene_id} = $perDiff;
		}
		elsif(exists $ase{$gene_id} && $perDiff ne "NA" && $ase{$gene_id} < $perDiff && $cond1>$num*10 && $cond2>$num*10){
			$ase{$gene_id} = $perDiff;
		}
	}

	my %de;
	while(<DE>){
		chomp;
		my ($gene_id,undef,$lfc) = split /\t/;
		$de{$gene_id} = $lfc;
	}

	foreach my $id (keys %$bg){
		if(!exists $ase{$id}){
			$ase{$id} = 0;
		}
	}
	return (\%ase,\%de);
}

#open BG, 'DE_sig.txt'; ###For only the DE and ASE GENE;
open BG,'colon/RC.tsv'; ###For colon expressed gene;
<BG>;
my %bg;
while(<BG>){
	chomp;
	my ($id) = split /\t/;
	$bg{$id} = '';
}
open BG,'Common_gene_fast.txt';
while(<BG>){
	chomp;
	my ($gene_id) = split;
	$bg{$gene_id} = '';
}

open ANNO,"awk '(\$3 == \"gene\")' /home/bio-longyk/cnda/ensembl/Homo_sapiens.GRCh38.90.gtf |";
my %anno;
while(<ANNO>){
	chomp;
	my ($id,$name,$type) = (split)[9,13,17];
	$id =~ s/\"|\;//g;
	$name =~ s/\"|\;//g;
	$type =~ s/\"|\;//g;
	$anno{$id} = "$name\t$type";
}
	


my ($colon_ase,$colon_de) = &sig('colon',\%bg);
my ($prost_ase,$prost_de) = &sig('prost',\%bg);
my ($lung_ase,$lung_de) = &sig('lung',\%bg);

open OUT,'>CombineColon.tsv';
print OUT "gene_id\tgene_name\tgene_type\tColonMaxPercentDiff\tColonLog2FoldChange\tColonMaxPercentDiff\tColonLog2FoldChange\tLungMaxPercentDiff\tLungLog2FoldChange\n";
foreach my $id (keys %bg){
	print OUT "$id\t$anno{$id}\t$colon_ase->{$id}\t$colon_de->{$id}\t$prost_ase->{$id}\t$prost_de->{$id}\t$lung_ase->{$id}\t$lung_de->{$id}\n" if exists $anno{$id};
}


#######R Commands
my $cmds = <<EOF;
library(ggplot2)
data <-read.table("CombineColon.tsv",sep="\t",header=T)
pdf(file = "ScatterPlotprost_sig.pdf")
ggplot(data, aes(x = ColonMaxPercentDiff, y = ColonLog2FoldChange))+geom_point()+ylim(-8,8)
EOF
######End R Commands

# Create a communication bridge with R and start R
my $R = Statistics::R->new();
$R->run($cmds);			####calculate the pvalue in R
