#!/usr/bin/perl -w
#
open FILE,'mKO_293R.tsv';
my $header = <FILE>;
my %hash;
my %nVSt;
my %GnVSt;
my %tVSl;
my %GtVSl;
my %pVSt;
my %Gpvst;
while(<FILE>){
	chomp;
	my ($target,$gene,$pos1,$pos2,$pos3,$neg1,$neg2,$lib,$tot1,$tot2,$tot3) = split;
	$hash{$gene}->{$target} = $_;
	my $pos = ($pos1+$pos2+$pos3)/3;
	my $neg = ($neg1+$neg2)/2;
	my $tot = ($tot1+$tot2+$tot3)/3;
	if($tot >0 && ($neg+$tot)>50){
		my $lfc = '-Inf';
		if($neg >0){
			$lfc = log($neg/$tot)/log(2);
		}
		$nVSt{$gene}->{$target} = $lfc;
		if(!exists $GnVSt{$gene} || $GnVSt{$gene} < $lfc){
			$GnVSt{$gene} = $lfc;
		}
	}
	
	if($tot >0 && $pos >0 &&  ($tot+$pos)>100){
		my $lfc = log($pos/$tot)/log(2);
		$pVSt{$gene}->{$target} = $lfc;
		if(!exists $GpVSt{$gene} || $GpVSt{$gene} < $lfc){
			$GpVSt{$gene} = $lfc;
		}
	}

	if($lib>5){
		my $lfc = "-Inf";
		if ($tot > 0){
			$lfc = log($tot/$lib)/log(2);
		}
		$tVSl{$gene}->{$target} = $lfc;
		if(!exists $GtVSl{$gene} || $GtVSl{$gene} > $lfc){
			$GtVSl{$gene} = $lfc;
		}
	}
}
open OUT,'>Deplete_totVSlib.tsv';
print OUT "target\tgene\ttotal1\ttotal2\ttotal3\tlibrary\tL2FC\tStatus\n";
foreach my $gene (sort{$GtVSl{$a}<=>$GtVSl{$b}} keys %GtVSl){
	my $val = $tVSl{$gene};
	my $status = "No";
	my $enrich = 0.1;
	my $deplete = 0.1;
	while (my ($tar,$count) = each %$val){
		if($count > 2){
			$enrich++;
		}
		elsif($count < -2){
			$deplete++;
		}
	}
	if($enrich/$deplete>=1.5){
		$status  = "Enrich";
	}
	elsif($deplete/$enrich>=1.5){
		$status = "Deplete";
	}
	foreach my $tar (sort{$val->{$a}<=>$val->{$b}} keys %$val){
		my (undef,undef,$pos1,$pos2,$pos3,$neg1,$neg2,$lib,$tot1,$tot2,$tot3) = split /\t/,$hash{$gene}->{$tar};
		print OUT "$tar\t$gene\t$tot1\t$tot2\t$tot3\t$lib\t$val->{$tar}\t$status\n";		
	}
}

open OUT,'>Enrich_NegVStal.tsv';
print OUT "target\tgene\tGFPneg1\tGFPneg2\ttotal1\ttotal2\ttotal3\tL2FC\tStatus\n";
foreach my $gene (sort{$GnVSt{$b}<=>$GnVSt{$a}} keys %GnVSt){
	my $val = $nVSt{$gene};
	my $status = "No";
	my $enrich = 0.1;
	my $deplete = 0.1;
	while (my ($tar,$count) = each %$val){
		if($count > 0){
			$enrich++;
		}
		elsif($count < 0){
			$deplete++;
		}
	}
	if($enrich >=2 && $enrich/$deplete>=1.5){
		$status  = "Enrich";
	}
	elsif($deplete>=2 && $deplete/$enrich>=1.5){
		$status = "Deplete";
	}
	foreach my $tar (sort{$val->{$b}<=>$val->{$a}} keys %$val){
		my (undef,undef,$pos1,$pos2,$pos3,$neg1,$neg2,$lib,$tot1,$tot2,$tot3) = split /\t/,$hash{$gene}->{$tar};
		print OUT "$tar\t$gene\t$neg1\t$neg2\t$tot1\t$tot2\t$tot3\t$val->{$tar}\t$status\n";		
	}
}
open OUT,'>Enrich_PosVStal.tsv';
print OUT "target\tgene\tGFPpos1\tGFPpos2\tGFPpos3\ttotal1\ttotal2\ttotal3\tL2FC\tStatus\n";
foreach my $gene (sort{$GpVSt{$b}<=>$GpVSt{$a}} keys %GpVSt){
	my $val = $pVSt{$gene};
	my $status = "No";
	my $enrich = 0.1;
	my $deplete = 0.1;
	while (my ($tar,$count) = each %$val){
		if($count > 0){
			$enrich++;
		}
		elsif($count < 0){
			$deplete++;
		}
	}
	if($enrich>=2 && $enrich/$deplete>=1.5){
		$status  = "Enrich";
	}
	elsif($deplete>=2 && $deplete/$enrich>=1.5){
		$status = "Deplete";
	}
	foreach my $tar (sort{$val->{$b}<=>$val->{$a}} keys %$val){
		my (undef,undef,$pos1,$pos2,$pos3,$neg1,$neg2,$lib,$tot1,$tot2,$tot3) = split /\t/,$hash{$gene}->{$tar};
		print OUT "$tar\t$gene\t$pos1\t$pos2\t$pos3\t$tot1\t$tot2\t\t$tot3\t$val->{$tar}\t$status\n";		
	}
}
