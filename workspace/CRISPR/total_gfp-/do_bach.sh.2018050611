#!/bin/bash

nodes=1
ppn=12
threads=$[$nodes*$ppn]
:<<BL
cat >star.sh << EOF
#!/bin/bash
#PBS -q cal
#PBS -N STAR
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -o \${out}
#PBS -j oe 
#PBS -l walltime=02:00:00

mkdir \${inp}
cd \$inp

STAR --runThreadN $threads --genomeDir /home/bio-longyk/workspace/data_P101SC17051084-01-B1-7/genomeMouDir  --readFilesIn \$fq1 --outSAMtype BAM Unsorted --outSAMattrIHstart 0  --outFilterMultimapScoreRange 0  --alignEndsType EndToEnd  --readFilesCommand zcat --outReadsUnmapped Fastx --scoreGap -1000
####INDEX for sorted bam file
#echo 'generating index'
#samtools index -@ $threads Aligned.sortedByCoord.out.bam

######Gene Abundance

#python -m HTSeq.scripts.count --mode=union -s reverse -r pos  -f bam  Aligned.sortedByCoord.out.bam /home/lyk/data1/cnda/ensembl/hg38.ensemblv89.nopsuedo.gtf  >htseq.reverse.count 

EOF
BL


cat >star.sh <<EOF
#!/bin/bash
#PBS -q ser
#PBS -N CRISPR
#PBS -l nodes=1:ppn=1
#PBS -o \${out}
#PBS -j oe 
#PBS -l walltime=01:00:00

mkdir \$inp
cd \$inp
perl /home/bio-longyk/workspace/CRISPR/total_gfp-/gRNA.pl \$fq1

EOF

for i in /home/bio-longyk/workspace/CRISPR/total_gfp-/*fastq.gz
do
	sam=${i%%.*}
	sam=${sam##*\/}
	inp=/home/bio-longyk/workspace/CRISPR/total_gfp-/OUT/$sam
	out=log_$sam
	fq1=/home/bio-longyk/workspace/CRISPR/total_gfp-/${sam}.fastq.gz
	qsub -v inp=$inp,out=$out,fq1=$fq1,fq2=$fq2 star.sh
done


