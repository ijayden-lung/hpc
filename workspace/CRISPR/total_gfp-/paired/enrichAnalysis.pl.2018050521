#!/usr/bin/perl -w
open CONTROL,'mKO_293R.tsv';
<CONTROL>;
my %control1;
my %high1;
my %low1;
my %control2;
my %high2;
my %low2;
my %control3;
my %high3;
while(<CONTROL>){
	chomp;
	my ($sgRNA,$gene,$h1,$h2,$h3,$l1,$l2,$lib,$c1,$c2,$c3) = split;
	$control1{"$sgRNA\t$gene"} = $c1+1;
	$control2{"$sgRNA\t$gene"} = $c2+1;
	$control3{"$sgRNA\t$gene"} = $c3+1;
	$high1{"$sgRNA\t$gene"} = $h1+1;
	$high2{"$sgRNA\t$gene"} = $h2+1;
	$high3{"$sgRNA\t$gene"} = $h3+1;
	$low1{"$sgRNA\t$gene"} = $l1+1;
	$low2{"$sgRNA\t$gene"} = $l2+1;
}


my %enrichHigh1;
my %enrichHigh2;
my %enrichHigh3;
my %geneCountHigh1;
my %geneCountHigh2;
my %geneCountHigh3;
while(my ($target,$readC1) = each %control1){
	my $readH1 = $high1{$target};
	my $readH2 = $high2{$target};
	my $readH3 = $high3{$target};
	my $readC3 = $control3{$target};
	my $readC2 = $control2{$target};
	my (undef,$gene) = split /\t/,$target;
	if($readC1 + $readH1 > 30){
		$geneCountHigh1{$gene}++;
		$enrichHigh1{$target} = log($readH1/$readC1)/log(2);
	}
	if($readC2 + $readH2 > 30){
		$geneCountHigh2{$gene}++;
		$enrichHigh2{$target} = log($readH2/$readC2)/log(2);
	}
	if($readC3 + $readH3 > 30){
		$geneCountHigh3{$gene}++;
		$enrichHigh3{$target} = log($readH3/$readC3)/log(2);
	}
}
my $i = 0;
open OUT1,'>hKO_Enrich_High1.tsv';
open OUT2,'>hKO_Enrich_High2.tsv';
open OUT3,'>hKO_Enrich_High3.tsv';
print OUT1 "Construct\tGeneSymbol\tNormalizedScore\tConstruct Rank\n";
print OUT2 "Construct\tGeneSymbol\tNormalizedScore\tConstruct Rank\n";
print OUT3 "Construct\tGeneSymbol\tNormalizedScore\tConstruct Rank\n";
foreach my $target (sort{$enrichHigh1{$b}<=>$enrichHigh1{$a}} keys %enrichHigh1){
	my (undef,$gene) = split /\t/,$target;
	if ($geneCountHigh1{$gene} >1){
		$i++;
		print OUT1 "$target\t$enrichHigh1{$target}\t$i\n" ;
	}
}
$i=0;
foreach my $target (sort{$enrichHigh2{$b}<=>$enrichHigh2{$a}} keys %enrichHigh2){
	my (undef,$gene) = split /\t/,$target;
	if ($geneCountHigh2{$gene} >1){
		$i++;
		print OUT2 "$target\t$enrichHigh2{$target}\t$i\n" ;
	}
}
$i=0;
foreach my $target (sort{$enrichHigh3{$b}<=>$enrichHigh3{$a}} keys %enrichHigh3){
	my (undef,$gene) = split /\t/,$target;
	if ($geneCountHigh3{$gene} >1){
		$i++;
		print OUT3 "$target\t$enrichHigh3{$target}\t$i\n" ;
	}
}


my %enrichLow1;
my %enrichLow2;
my %geneCountLow1;
my %geneCountLow2;
while(my ($target,$readC1) = each %control1){
	my $readH1 = $low1{$target};
	my $readH2 = $low2{$target};
	my $readC2 = $control2{$target};
	my (undef,$gene) = split /\t/,$target;
	if($readC1 + $readH1 > 30){
		$geneCountLow1{$gene}++;
		$enrichLow1{$target} = log($readH1/$readC1)/log(2);
	}
	if($readC2 + $readH2 > 30){
		$geneCountLow2{$gene}++;
		$enrichLow2{$target} = log($readH2/$readC2)/log(2);
	}
}
$i = 0;
open OUT1,'>hKO_Enrich_Low1.tsv';
open OUT2,'>hKO_Enrich_Low2.tsv';
print OUT1 "Construct\tGeneSymbol\tNormalizedScore\tConstruct Rank\n";
print OUT2 "Construct\tGeneSymbol\tNormalizedScore\tConstruct Rank\n";
foreach my $target (sort{$enrichLow1{$b}<=>$enrichLow1{$a}} keys %enrichLow1){
	my (undef,$gene) = split /\t/,$target;
	if ($geneCountLow1{$gene} >1){
		$i++;
		print OUT1 "$target\t$enrichLow1{$target}\t$i\n" ;
	}
}
$i=0;
foreach my $target (sort{$enrichLow2{$b}<=>$enrichLow2{$a}} keys %enrichLow2){
	my (undef,$gene) = split /\t/,$target;
	if ($geneCountLow2{$gene} >1){
		$i++;
		print OUT2 "$target\t$enrichLow2{$target}\t$i\n" ;
	}
}
