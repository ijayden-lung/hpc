pdf(file='T2DMSOvsT38um.pdf',width=4.5,height=4.5);
gstable=read.table('T2DMSOvsT38um.gene_summary.txt',header=T)
# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("TGFBR2","MAP3K11","PPCDC","CDKN2A","TRAPPC5","PKN1","S100A13","HIPK4","SLC1A2","CDK13","G6PC3","STK35")
samplelabel=sub("score","selection",colnames(gstable)[startindex]);
#samplelabel='T3_8um_REP1,T3_8um_REP2,T3_8um_REP3_vs_T2_DMSO_REP1,T2_DMSO_REP2,T2_DMSO_REP3 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 1.8,cex=0.9,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste("Distribution of RRA scores in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste("Distribution of p values in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(23.2904586514,22.5699370487,65.8626700902,0.0,0.0,79.7219361021),c(816.391866412,660.976727854,159.168119385,479.064087634,79.5115525295,197.09034203),c(76.0004440203,190.232326553,289.673780489,181.588101789,1.28244439564,53.7015819577),c(1493.04098091,793.172073425,296.382015406,385.076276155,179.542215389,127.333647941),c(400.841051526,332.100502288,262.840840823,319.376058423,48.0916648364,14.9478630192))
targetgene="TGFBR2"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(681.552368956,412.707420319,257.96212452,395.11380942,86.5649967055,94.116174565),c(33.0969675572,12.897106885,109.771116817,312.988537254,0.0,0.0),c(357.937575063,467.52012458,478.72403723,485.451608803,555.939645509,788.914992677),c(84.5811393129,187.008049832,285.404903724,3.65001209626,0.641222197819,0.0),c(205.936687023,361.118992779,604.350982031,334.888609832,162.229216048,627.256622248),c(88.2585801526,141.868175735,368.343080875,801.177655129,137.221550333,432.934402999),c(71.0971895674,83.8311947522,113.430154044,307.51351911,0.0,0.0),c(149.549260814,196.680879996,297.601694482,227.213252992,620.061865291,259.649916888),c(572.454957379,480.417231465,570.809807448,341.276131,971.451629695,532.033198571),c(317.485725827,332.100502288,180.51250321,25.5500846738,302.65687737,40.9682171636))
targetgene="MAP3K11"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(161.807396946,222.475093765,407.982650837,203.488174367,259.694990117,17.7159858005),c(1202.52315458,622.285407199,470.796123237,187.063119933,212.885769676,916.248640618),c(1455.0407589,954.385909487,739.125519901,357.701185434,232.763657808,752.375771964),c(528.325667302,461.071571137,244.545654687,261.888367907,51.2977758255,132.869893504),c(690.133064249,370.791822942,581.78691913,1090.44111376,105.80166264,689.816197106),c(789.42396692,673.873834739,661.066059054,621.414559388,1356.18494839,646.079857161),c(432.71220547,486.865784907,325.044473686,541.114293271,69.8932195622,59.7914520766),c(1203.74896819,770.602136376,433.595911427,224.47574392,533.496868585,121.243777822),c(120.129734097,254.717860978,601.301784342,199.83816227,275.084322864,477.777992057),c(3065.75984669,1663.72678816,751.322310659,1322.21688187,258.412545721,688.708947993))
targetgene="PPCDC"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(63.742307888,141.868175735,355.53645058,265.538380003,1.28244439564,58.1305784078),c(1474.65377672,864.106161292,439.084467268,928.928078498,506.565536277,348.783470447),c(3448.21369402,1989.378737,628.134724008,1007.40333857,913.100409694,861.439809548),c(921.811837149,564.248426217,570.199967911,273.75090722,260.977434512,865.315181442),c(155.67832888,167.662389504,250.034210528,251.850834642,40.3969984626,24.9131050319),c(1094.65155661,802.844903589,445.792702185,1003.75332647,596.977866169,538.123068689),c(424.131510178,590.042639987,782.42412709,734.564934372,1134.32206794,1272.78285485),c(2128.01243257,1086.58125506,301.260731709,685.289771073,390.504318472,192.66134558),c(2000.52781679,906.021758668,370.782439026,664.302201519,483.481537155,96.8842973464),c(1396.20170547,1218.77660063,905.61171374,742.777461589,489.893759134,1195.27541698))
targetgene="CDKN2A"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(117.67810687,380.464653106,668.384133508,0.0,0.0,32.6638488196),c(1548.20259351,673.873834739,449.451739412,1278.41673672,470.015871001,674.314709531),c(132.387870229,261.16641442,235.398061619,3.65001209626,374.473763526,210.377331381),c(1381.49194211,1199.4309403,1026.96978178,1571.33020744,888.733966177,1169.25506283),c(1376.58868766,1089.80553178,831.821129658,1765.69335157,2959.88166513,1437.20934806))
targetgene="TRAPPC5"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1417.04053689,925.367418996,754.981347886,511.001693476,947.726408376,1221.84939568),c(650.907028625,399.810313434,444.573023109,149.650495947,559.145756498,668.224839412),c(1538.3960846,1064.01131801,778.765089863,413.363869902,464.886093419,532.586823127),c(11.0323225191,54.8127042611,140.872933248,0.0,102.595551651,43.7363399449),c(63.742307888,161.213836062,393.346501928,8.21252721659,74.381774947,158.336623092),c(1295.68498918,847.984777686,226.250468551,1032.95342324,141.710105718,1.10724911253),c(268.453181297,222.475093765,229.29966624,323.026070519,0.641222197819,0.0),c(111.549038804,80.606918031,322.605115534,107.67535684,78.2291081339,86.9190553336),c(1014.97367175,915.694588832,881.218132225,1683.5680794,995.176851015,1893.39598243),c(100.516716285,51.5884275398,171.97474968,0.0,0.641222197819,80.2755606584))
targetgene="PKN1"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(525.874040076,541.678489168,640.941354304,720.877389011,323.817209898,558.607177271),c(2509.24046628,1473.49446161,595.813228501,748.252479733,491.176203529,624.488499467),c(2713.95133969,1476.71873833,432.376232351,743.689964613,188.519326159,430.719904774),c(1116.71620165,1051.11421112,591.544351736,420.663894094,702.138306612,408.574922523),c(272.130622137,361.118992779,493.970025677,2.7375090722,32.0611098909,176.606233448))
targetgene="S100A13"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(413.099187659,583.594086544,626.915044933,323.026070519,550.168645729,82.4900588835),c(2031.17315712,1489.61584521,636.672477539,1154.31632544,573.893867048,644.972608049),c(2157.43195929,1747.55798291,582.396758668,1539.3926016,424.489094956,1038.59966755),c(799.230475826,648.079620969,712.292580235,600.426989835,48.7328870342,409.682171636),c(2918.6622131,2298.90930224,747.663273431,1462.74234758,1459.42172224,656.59872373))
targetgene="HIPK4"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(62.5164942748,196.680879996,87.2070539157,197.100653198,92.9772186837,182.696103567),c(1128.97433779,403.034590155,284.795064186,524.689238837,151.328438685,116.261156816),c(1651.17093702,735.135092443,219.542233634,498.22665114,150.04599429,2.21449822506),c(259.872486005,267.614967863,248.814531452,138.700459658,1.92366659346,46.5044627262),c(1254.00732633,509.435721956,158.558279847,170.6380655,103.877996047,13.2869893504))
targetgene="SLC1A2"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(533.228921755,367.567546221,557.393337615,450.776493888,109.007773629,212.038205049),c(145.871819974,219.250817044,149.410686779,60.2251995883,252.641545941,1.10724911253),c(1664.65488677,1305.8320721,848.896636718,1054.85349582,658.53519716,653.276976393),c(258.646672392,328.876225566,597.032907577,100.375332647,142.351327916,130.655395279),c(214.517382315,277.287798027,464.697727859,107.67535684,138.503994729,344.908098553))
targetgene="CDK13"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1029.68343511,596.491193429,586.055795895,695.327304338,464.886093419,507.120093539),c(74.7746304071,206.353710159,324.434634148,0.0,1.28244439564,0.553624556265),c(186.323669211,532.005659004,478.114197692,410.626360829,924.642409255,460.615630812),c(1054.19970738,422.380250482,362.854525034,323.938573543,146.198661103,702.5495619),c(345.679438931,190.232326553,265.280198974,344.926143097,355.878319789,120.136528709))
targetgene="G6PC3"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(305.227589694,454.623017695,639.721675228,1043.90345953,1302.32228377,460.615630812),c(275.808062977,651.30389769,496.409383828,341.276131,1004.79518398,528.157826677),c(5402.16059351,3143.66980321,923.906899877,2855.2219623,683.542862875,489.957732294),c(2723.7578486,1663.72678816,678.751405652,1063.06602304,43.6031094517,475.009869275),c(24.5162722646,183.783773111,162.827156612,0.0,5.77099978037,3.32174733759))
targetgene="STK35"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("CDKL1","HTR4","KLK1","DCD","SLC1A3","AKAP6","TLK2","PTK6","PPAP2A","RABGGTA","TOP1MT","HMOX2")
samplelabel=sub("score","selection",colnames(gstable)[startindex]);
#samplelabel='T3_8um_REP1,T3_8um_REP2,T3_8um_REP3_vs_T2_DMSO_REP1,T2_DMSO_REP2,T2_DMSO_REP3 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 1.8,cex=0.9,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste("Distribution of RRA scores in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste("Distribution of p values in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(820.069307251,851.209054407,392.126822852,560.276856776,399.481429241,508.227342651),c(93.1618346055,157.989559341,566.540930683,298.388488869,902.840854529,1009.25756607),c(1.22581361323,3.22427672124,56.7150770221,0.0,41.0382206604,35.431971601),c(241.485281806,315.979118681,509.825853661,640.577122894,173.771215609,841.509325523),c(908.327887404,983.404399978,575.078684214,1104.12865912,382.809652098,833.204957179))
targetgene="CDKL1"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(187.549482824,470.744401301,754.371508348,3319.68600155,2536.67501457,4102.91158648),c(405.744305979,390.13748327,394.566181003,594.95197169,247.511768358,406.360424298),c(128.710429389,119.298238686,210.394640566,628.714583581,795.115525295,646.079857161),c(571.229143765,461.071571137,686.679319644,1409.81717218,645.069531006,1086.76500395),c(518.519158397,641.631067527,675.702207962,713.577364819,607.878643532,404.69955063))
targetgene="HTR4"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2481.04675318,1247.79509112,581.177079592,892.427957536,246.229323962,390.858936723),c(3052.27589694,1679.84817177,939.152888323,1154.31632544,577.741200235,1314.85832113),c(64.9681215012,51.5884275398,242.106296535,68.4377268049,527.084646607,539.783942358),c(789.42396692,677.09811146,877.559094998,541.114293271,999.665406399,553.624556265),c(384.905474554,483.641508186,655.577503213,761.940025094,1201.65039871,610.64788556),c(2.45162722646,12.897106885,31.1018164315,0.0,45.5267760451,87.4726798898),c(53.9357989821,183.783773111,205.515924263,1.82500604813,50.0153314299,0.0),c(28.1937131043,77.3826413097,271.378594353,132.312938489,75.0229971448,237.504934638),c(1486.91191285,1086.58125506,278.696668808,516.476711621,249.435434952,458.954757144),c(1909.81760941,1163.96389637,548.855584085,1110.51618029,657.252752764,195.429468361))
targetgene="KLK1"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(459.680104961,467.52012458,526.901360722,340.363627976,444.366983088,989.880706602),c(42.9034764631,164.438112783,31.7116559694,303.863507014,535.420535179,582.413033191),c(102.968343511,199.905156717,378.710353019,265.538380003,253.923990336,71.4175677582),c(1002.71553562,1057.56276457,1055.63224006,1107.77867122,2107.05614203,2695.0443399),c(2103.4961603,806.06918031,248.204691914,898.815478704,493.099870123,182.696103567))
targetgene="DCD"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(475.615681933,490.090061628,428.107355586,143.262974778,97.4657740685,502.691097088),c(1111.8129472,644.855344248,468.356765086,208.050689487,139.786439124,363.17770891),c(424.131510178,312.75484196,383.589069322,385.076276155,328.946987481,465.044627262),c(215.743195929,257.942137699,428.107355586,472.676566466,557.863312102,91.90167634),c(578.584025445,744.807922606,962.326790762,669.777219664,676.489418699,456.740258919),c(687.681437022,473.968678022,382.979229784,65.7002177327,160.305549455,217.574450612),c(598.197043257,651.30389769,814.135783059,463.551536225,450.137982869,144.496009185),c(7.35488167938,3.22427672124,41.4690885753,725.439904132,0.641222197819,83.597307996),c(218.194823155,319.203395403,494.579865214,394.201306396,259.053767919,325.531239084),c(218.194823155,232.147923929,259.791643134,125.925417321,34.6259986822,59.2378275203))
targetgene="SLC1A3"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1277.29778499,1099.47836194,820.234178438,1093.17862283,915.665298485,1322.60906492),c(1587.42862913,1247.79509112,781.204448014,577.614414233,851.543078703,638.329113373),c(554.06775318,319.203395403,168.925551991,205.313180415,452.061649462,52.5943328452),c(0.0,9.67283016372,51.2265211813,0.0,101.954329453,83.597307996),c(1246.65244466,1122.04829899,1128.8129846,793.877630937,2484.09479435,2153.59952387))
targetgene="AKAP6"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(818.843493638,715.789432115,742.174717591,1095.9161319,2072.43014335,1191.40004508),c(610.455179389,515.884275398,348.218376125,981.853253894,2453.95735105,156.675749423),c(321.163166666,270.839244584,427.497516048,1042.99095651,1796.06337609,1313.19744746),c(11.0323225191,38.6913206549,68.3020282417,49.2751632995,341.13020924,362.624084353),c(1637.68698728,812.517733752,461.648530169,1859.68116304,393.069207263,822.132466053))
targetgene="TLK2"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(148.323447201,270.839244584,432.376232351,137.787956634,466.809760012,163.319244098),c(1681.81627735,867.330438013,482.383074457,1710.94317012,429.618872539,429.612655662),c(34.3227811705,29.0184904912,206.735603339,1.82500604813,319.969876712,279.580400914),c(208.388314249,216.026540323,254.912926831,389.638791276,511.695313859,135.638016285),c(220.646450382,425.604527204,434.205750965,573.051899113,475.786870782,787.254119009))
targetgene="PTK6"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(710.971895674,441.72591081,692.167875485,466.289045297,190.442992752,343.80084944),c(1236.84593575,1173.63672653,782.42412709,1074.92856235,1096.48995827,573.001415734),c(370.195711196,506.211445235,546.416225934,285.613446532,773.313970569,1019.77643264),c(36.7744083969,132.195345571,90.866091143,169.725562476,1424.15450136,895.764532037),c(266.001554071,393.361759991,776.935571249,1296.6667972,1505.58972048,1766.06233448))
targetgene="PPAP2A"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(207.162500636,203.129433438,247.594852376,250.025828594,296.244655392,73.6320659832),c(2368.27190076,1286.48641177,917.808504498,1374.22955424,1401.71172443,1165.37969094),c(1066.45784351,1154.2910662,739.735359439,1025.65339905,445.008205286,576.323163072),c(36.7744083969,61.2612577035,276.867150194,481.801596706,714.32152837,540.337566915),c(1800.72019784,1031.7685508,537.268632865,507.35168138,801.527747273,637.775488817))
targetgene="RABGGTA"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(6.12906806615,25.7942137699,165.876354301,177.025586669,47.4504426386,355.980589678),c(243.936909033,174.110942947,188.440417203,368.651221722,216.091880665,217.574450612),c(474.38986832,367.567546221,515.314409502,584.914438426,1403.63539103,1663.64179158),c(220.646450382,319.203395403,689.728517334,138.700459658,468.733426606,635.560990592),c(4534.28455534,2340.82489962,747.053433894,1318.56686977,1320.27650531,1211.88415366))
targetgene="TOP1MT"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(93.1618346055,148.316729177,201.856887036,135.962950586,235.969768797,1.10724911253),c(8.58069529261,3.22427672124,105.502240052,60.2251995883,48.7328870342,54.255206514),c(546.712871501,828.639117358,865.972143779,1125.11622867,1158.68851146,397.502431398),c(55.1616125954,238.596477372,321.385436459,84.8627812381,33.9847764844,117.922030484),c(214.517382315,415.93169704,420.789281132,421.576397118,893.222521562,1216.31315011),c(1779.88136641,1180.08527997,377.490673943,342.188634024,543.75642375,397.502431398),c(163.03321056,222.475093765,199.417528884,8.21252721659,730.352083316,496.047602413),c(687.681437022,348.221885894,589.714833122,448.038984816,307.786654953,416.325666311),c(143.420192748,257.942137699,378.100513481,230.863265088,240.458324182,157.782998535),c(77.2262576335,254.717860978,284.185224648,774.715067431,419.359317373,215.359952387))
targetgene="HMOX2"
collabel=c("T2_DMSO_REP1","T2_DMSO_REP2","T2_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



dev.off()
Sweave("T2DMSOvsT38um_summary.Rnw");
library(tools);

texi2dvi("T2DMSOvsT38um_summary.tex",pdf=TRUE);

