pdf(file='T3DMSOvsT38um.pdf',width=4.5,height=4.5);
gstable=read.table('T3DMSOvsT38um.gene_summary.txt',header=T)
# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("MAP3K11","EGLN2","ALAS1","TRAPPC5","PPCDC","SLC1A3","SPR","TGFBR2","NID1","PDE3B","BGLAP","FTH1")
samplelabel=sub("score","selection",colnames(gstable)[startindex]);
#samplelabel='T3_8um_REP1,T3_8um_REP2,T3_8um_REP3_vs_T3_DMSO_REP1,T3_DMSO_REP2,T3_DMSO_REP3 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 1.8,cex=0.9,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste("Distribution of RRA scores in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste("Distribution of p values in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(313.366310164,1.77617171774,110.753275113,472.157135898,102.19088762,110.103615257),c(50.5429532523,0.0,0.0,374.018239291,0.0,0.0),c(662.112687605,570.151121393,739.147393994,580.109922165,656.292589382,922.927363185),c(188.693692142,207.812090975,238.14330829,4.36172873808,0.756969537926,0.0),c(672.221278255,644.750333538,723.461307819,400.188611719,191.513293095,733.808212273),c(416.136981777,962.685071012,454.421163124,957.399458009,161.991481116,506.476630183),c(257.769061587,170.512484903,19.0134377876,367.475646184,0.0,0.0),c(352.115907658,248.664040483,367.434685246,271.517613946,731.989543175,303.756444445),c(684.014634014,1507.96978836,953.52390505,407.821637011,1146.80884996,622.409260365),c(252.714766261,230.902323306,182.529002761,30.5321011666,357.289621901,47.9274560531))
targetgene="MAP3K11"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(266.192887129,452.923788022,350.322591237,341.305273755,1438.24212206,292.746082919),c(909.773158541,614.555414336,994.402796293,1084.9800236,1078.68159154,949.481764512),c(665.482217822,383.653091031,313.721723496,380.560832398,235.417526295,417.746069652),c(42.1191277102,175.841000056,30.4215004602,1.09043218452,0.0,0.647668325042),c(345.376847224,216.692949564,468.20590552,637.902827945,60.5575630341,161.917081261),c(111.194497155,163.407798032,105.999915666,0.0,311.114480088,0.0),c(175.215571275,470.6855052,211.999831332,2.18086436904,572.268970672,0.647668325042),c(648.634566738,554.165575933,352.223935016,174.469149523,674.459858292,198.186507463),c(680.645103797,385.429262749,638.851509664,1014.1019316,554.8586713,566.062116087),c(596.406848377,912.952262916,749.129448833,268.246317392,426.93081939,233.80826534))
targetgene="EGLN2"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(497.005706981,603.89838403,600.824634089,181.01174263,575.296848824,1.29533665008),c(1204.60705251,1371.20456609,1307.1738479,838.542349897,383.026586191,215.025883914),c(158.36792019,218.469121281,390.726146536,149.389209279,73.4260451788,0.647668325042),c(759.829063893,877.428828561,581.335860357,662.982768189,168.804206958,608.80822554),c(336.953021682,346.353484958,282.349551146,3.27129655356,278.564789957,20.7253864013))
targetgene="ALAS1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(545.863895125,333.920282934,694.941151138,0.0,0.0,38.2124311775),c(470.049465246,548.83706078,323.703778334,1527.69549051,554.8586713,788.860019901),c(298.203424188,428.057383974,304.215004602,4.36172873808,442.070210149,246.113963516),c(965.370407119,740.663606296,986.797421178,1877.72422174,1049.15977957,1367.87550249),c(1233.24805936,2049.70216227,997.730147906,2109.98627705,3494.17138707,1681.34697181))
targetgene="TRAPPC5"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(390.865505151,557.717919369,718.232612428,243.166377148,306.57266286,20.7253864013),c(630.102150545,1360.54753579,894.582247908,223.538597827,251.313886591,1071.89107794),c(929.990339842,1026.62725285,968.73465528,427.449416332,274.779942267,880.181253732),c(419.506511994,388.981606184,549.963688007,312.954036957,60.5575630341,155.44039801),c(916.512218975,484.894878942,668.79767418,1303.0664605,124.899973758,806.994733002),c(678.960338689,611.003070901,356.501958518,742.584317659,1600.99057271,755.828935324),c(414.452216669,946.699525553,554.241711509,646.626285421,82.5096796339,69.9481791045),c(657.05839228,735.335091142,488.170015197,268.246317392,629.798655555,141.839363184),c(555.972485775,575.479636546,889.828888461,238.80464841,324.73993177,558.937764511),c(781.731010302,948.475697271,823.757192149,1580.03623537,305.058723784,805.699396352))
targetgene="PPCDC"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(463.310404813,110.1226465,373.138716582,171.19785297,115.059369765,588.082839138),c(470.049465246,511.537454708,413.066935936,248.618538071,165.019359268,424.870421228),c(407.713156235,705.140171941,738.672058049,460.162381868,388.325372956,544.041393035),c(530.701009149,522.194485014,626.492775102,564.843871582,658.563497996,107.512941957),c(928.305574734,1481.32721259,1210.20531518,800.377223438,798.602862512,534.32636816),c(439.723693295,380.100747595,570.403133629,78.5111172855,189.242384482,254.533651742),c(941.783695601,838.353050771,916.447701364,553.939549737,531.392615624,169.041432836),c(32.0105370598,1.77617171774,64.1703525332,866.893586694,0.756969537926,97.7979170813),c(657.05839228,696.259313352,650.259572337,471.066703713,305.815693322,380.828975125),c(213.965168768,8.88085858868,357.452630407,150.479641464,40.876355048,69.3005107795))
targetgene="SLC1A3"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(667.16698293,872.100313408,680.205736852,219.176869089,602.547752189,225.388577115),c(704.231815315,150.974596007,1291.01242578,116.676243744,357.289621901,993.523210614),c(808.687252037,1134.97372763,887.927544682,522.317016385,472.348991666,476.036218906),c(773.30718476,907.623747763,867.012763116,282.421935791,267.967216426,277.202043118),c(251.030001153,358.786686983,79.3811027633,142.846616172,71.912106103,159.32640796))
targetgene="SPR"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(75.8144298784,97.6894444754,23.2914612898,0.0,0.0,93.2642388061),c(117.933557589,5.32851515321,180.627658982,572.476896873,93.8642227028,230.569923715),c(276.301477779,335.696454652,298.98630921,216.99600472,1.51393907585,62.8238275291),c(203.856578118,140.317565701,212.950503221,460.162381868,211.951470619,148.96371476),c(283.040538213,111.898818217,416.394287549,381.651264582,56.7727153445,17.4870447761))
targetgene="TGFBR2"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(803.632956711,532.851515321,536.178945611,990.112423545,261.154490585,183.290135987),c(692.438459556,918.280778069,707.775221644,1010.83063505,1214.93610837,681.994746269),c(576.189667076,626.988616361,599.398626255,2.18086436904,99.1630094683,253.885983416),c(399.289330693,671.392909304,274.268840087,328.220087541,86.2945273236,65.4145008292),c(75.8144298784,158.079282878,212.475167277,1.09043218452,0.756969537926,40.8031044776))
targetgene="NID1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(338.63778679,1099.45029328,202.493112438,131.942294327,467.0502049,66.7098374793),c(283.040538213,593.241353724,708.250557589,164.655259863,322.469023157,193.005160863),c(232.497584961,0.0,22.8161253452,0.0,2.27090861378,102.331595357),c(158.36792019,342.801141523,70.8250557589,89.4154391307,330.038718536,79.0155356551),c(325.159665923,559.494091087,243.847339626,83.9632782081,135.497547289,202.720185738))
targetgene="PDE3B"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(283.040538213,143.869909137,317.049075109,3.27129655356,64.3424107237,51.1657976783),c(399.289330693,536.403858756,652.160916116,704.4191912,115.816339303,164.507754561),c(717.709936182,921.833121505,1549.59517969,1017.37322816,1972.66261584,923.57503151),c(582.92872751,577.255808264,597.972618421,251.889834624,230.875709067,597.150195689),c(301.572954405,545.284717345,483.891991695,195.187361029,342.907200681,159.974076285))
targetgene="BGLAP"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(397.604565585,595.017525441,321.802434556,125.39970122,167.290267882,270.725359868),c(987.272353528,781.515555803,936.887146985,658.621039451,398.165976949,279.792716418),c(955.261816468,1596.77837424,559.470406901,134.123158696,2.27090861378,50.5181293533),c(342.007317007,491.999565813,501.004085704,298.778418559,144.581181744,189.766819237),c(365.594028525,335.696454652,192.035721655,248.618538071,331.552657612,99.0932537314))
targetgene="FTH1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("PHKG2","ADRB1","TRIB1","PTPRD","GLYATL1","KLK1","MTMR3","PIK3R5","HTR4","PRKAR1B","CHIA","SLC16A1")
samplelabel=sub("score","selection",colnames(gstable)[startindex]);
#samplelabel='T3_8um_REP1,T3_8um_REP2,T3_8um_REP3_vs_T3_DMSO_REP1,T3_DMSO_REP2,T3_DMSO_REP3 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 1.8,cex=0.9,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=1.8,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste("Distribution of RRA scores in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste("Distribution of p values in",samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in',samplelabel))



# you need to write after this code:
# dev.off()






# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(143.205034215,7.10468687094,1.42600783407,670.61579348,778.921654526,998.05688889),c(82.5534903121,5.32851515321,2.85201566814,495.056211772,502.627773183,362.046593698),c(946.837990926,1087.01709125,906.465646525,531.040473862,1201.31065669,924.222699835),c(77.4991949868,3.55234343547,2.37667972345,1956.23533903,654.778650306,621.113923715),c(897.979802782,1056.82217205,800.465730859,1420.83313643,343.664170218,729.922202322))
targetgene="PHKG2"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(185.324161925,227.34997987,184.905682485,0.0,404.221733253,46.632119403),c(69.0753694448,7.10468687094,13.784742396,543.035227891,1552.54452229,1542.09828193),c(141.520269106,1.77617171774,189.659041932,1.09043218452,934.100409801,422.279747927),c(822.165372904,1502.6412732,764.815535007,1320.51337545,1048.40281003,540.80305141),c(3.36953021682,3.55234343547,0.0,1.09043218452,481.432626121,236.39893864))
targetgene="ADRB1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(244.290940719,738.887434578,236.717300456,677.158386587,317.170236391,327.072504146),c(311.681545056,504.432767837,320.851762666,1150.40595467,2491.94371885,1471.5024345),c(254.39953137,777.963212368,196.313745157,398.00774735,1408.72031008,393.134673301),c(385.811209826,175.841000056,319.425754832,1489.53036406,1093.06401277,858.160530681),c(239.236645394,12.4332020241,231.963941009,889.792662569,5660.61820461,845.854832505))
targetgene="TRIB1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(678.960338689,149.19842429,806.64509814,126.490133404,346.69204837,270.077691543),c(252.714766261,3.55234343547,215.327182945,46.8885839344,432.229606156,412.564723052),c(38.7495974934,7.10468687094,3.32735161283,1146.04422593,1081.7094697,1075.77708789),c(1538.19054398,1103.00263671,1186.91385389,2853.66102689,816.770131422,1238.34183748),c(1086.67349492,1190.03505088,698.743838695,416.545094487,1561.62815674,744.818573798),c(75.8144298784,5.32851515321,1.90134377876,1508.06771119,1431.42939622,538.21237811),c(1084.98872982,941.3710104,767.192214731,814.552841837,1532.10634476,936.528398011),c(764.883359218,710.468687094,923.102404589,766.573825718,435.257484308,752.590593699),c(918.196984083,817.038990158,921.676396755,1840.64952747,1507.12635001,794.041366502),c(586.298257727,1147.40692966,769.09355851,676.067954403,305.815693322,1280.44027861))
targetgene="PTPRD"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(198.802282792,301.949192015,244.322675571,1.09043218452,292.190241639,271.373028193),c(796.893896278,1230.88700039,956.375920718,1190.7519455,650.993802616,589.378175788),c(859.230205289,1513.29830351,1094.69868062,1747.96279179,1297.44578801,1564.11900498),c(8.42382554205,1.77617171774,0.950671889381,926.867356843,1547.24573552,343.911880597),c(795.209131169,827.696020465,1151.73899399,2665.01625897,2995.32846157,828.367787729),c(901.349332999,722.901889118,974.914022561,857.079697033,467.0502049,718.264172472),c(653.688862063,328.591767781,752.93213639,89.4154391307,2587.32188063,898.315966833),c(372.333088959,207.812090975,400.23286543,637.902827945,15.1393907585,290.155409619),c(909.773158541,1170.49716199,652.63625206,292.235825452,650.993802616,870.466228856),c(598.091613485,470.6855052,560.42107879,753.488639504,974.219795311,320.595820896))
targetgene="GLYATL1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(503.744767414,238.007010177,339.389864509,1066.44267646,290.676302564,457.25383748),c(1388.24644933,2101.21114208,1003.90951519,1379.39671342,682.029553671,1538.21227197),c(156.683155082,83.4800707336,56.0896414735,81.7824138391,622.228960175,631.476616916),c(1009.17429994,527.523000167,1259.16491749,646.626285421,1180.11550963,647.668325042),c(896.295037674,760.201495191,682.582416576,910.510874075,1418.56091407,714.378162521),c(11.7933557589,0.0,55.1389695841,0.0,53.7448371928,102.331595357),c(289.779598646,206.035919257,233.865284788,2.18086436904,59.0436239582,0.0),c(85.9230205289,511.537454708,171.596276033,158.112666756,88.5654359374,277.849711443),c(235.867115177,426.281212256,383.120771421,617.184616439,294.461150253,536.91704146),c(653.688862063,227.34997987,484.36732764,1327.05596856,775.893776374,228.62691874))
targetgene="KLK1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1004.12000461,1825.90452583,1064.75251611,1390.30103526,1504.09847186,1034.32631509),c(766.568124326,545.284717345,692.08913547,830.909324605,244.50116075,727.979197347),c(55.5972485775,1.77617171774,0.0,670.61579348,427.687788928,693.65277612),c(264.50812202,491.999565813,54.1882976947,149.389209279,121.115126068,358.808252073),c(587.983022835,198.931232386,796.663043302,1611.65876872,940.913135642,881.476590382))
targetgene="MTMR3"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(951.892286251,476.014020353,889.353552516,338.033977201,812.228314195,924.87036816),c(822.165372904,710.468687094,649.784236392,3724.91634232,850.076791091,1391.83923052),c(1315.80154967,1928.92248546,1078.5372585,1028.27755,1504.09847186,768.782301825),c(215.649933876,35.5234343547,188.708370042,358.752188707,1825.05355594,743.523237148),c(421.191277102,154.526939443,187.282362208,738.222588921,1495.0148374,473.445545606))
targetgene="PIK3R5"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(860.914970397,1129.64521248,894.106911963,3966.99228729,2994.57149204,4799.86995689),c(621.678325003,872.100313408,755.308816114,710.961784308,292.190241639,475.388550581),c(272.931947562,58.6136666853,124.538017509,751.307775135,938.642227028,755.828935324),c(1029.39148124,2429.80290986,953.048569105,1684.71772508,761.511355154,1271.37292206),c(999.065709287,1154.51161653,942.115842377,852.717968295,717.607121954,473.445545606))
targetgene="HTR4"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(456.571344379,325.039424346,578.959180633,429.630280701,1799.31659165,465.02585738),c(1024.33718591,1097.67412156,1042.88706265,589.923811826,647.965924465,761.657950249),c(1211.34611295,2156.27246533,516.690171879,1734.87760557,1130.15552012,828.367787729),c(1428.68081193,1861.42796019,1469.73874098,1466.63128818,2630.46914429,2705.3105937),c(208.910873443,5.32851515321,46.5829225797,3.27129655356,476.890808893,211.787542289),c(64.0210741196,0.0,0.475335944691,0.0,114.302400227,180.699462687),c(604.830673919,1088.79326297,719.658620262,716.41394523,598.7629045,228.62691874),c(808.687252037,305.50153545,790.959011965,437.263305993,1191.4700527,819.300431178),c(409.397921344,991.103818496,443.488436396,152.660505833,477.647778431,300.518102819),c(965.370407119,813.486646723,919.775052977,823.276299313,1164.21914933,1049.22268657))
targetgene="PRKAR1B"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(30.3257719514,0.0,0.475335944691,34.8938299047,171.075115571,207.253864013),c(1357.92067738,1618.09243486,1573.36197693,585.562083088,1959.03716415,2760.36240133),c(141.520269106,78.1515555803,282.824887091,718.594809599,487.488382424,251.295310116),c(646.949801629,678.497596175,502.430093538,1161.31027651,809.957405581,419.689074627),c(729.503291941,470.6855052,537.1296175,162.474395494,293.704180715,856.217525706))
targetgene="CHIA"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}




# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(397.604565585,104.794131346,486.744007363,1212.56058919,648.722894003,1362.69415589),c(1056.34772297,1028.40342457,1233.49677647,701.147894647,1862.1450633,2314.11892538),c(529.016244041,204.25974754,607.954673259,531.040473862,464.779296287,794.689034827),c(537.440069583,1062.15068721,479.138632248,2913.63479704,1841.70688577,3299.22244776),c(257.769061587,758.425323473,390.250810591,777.478147563,173.346024185,95.2072437812),c(264.50812202,408.519495079,210.098487553,388.193857689,450.396875066,31.7357479271),c(606.515439027,902.295232609,925.479084313,445.986763469,386.81143388,566.062116087),c(630.102150545,376.54840416,951.147225326,2383.68475536,2221.70559381,1993.52310448),c(456.571344379,564.82260624,246.22401935,371.837374922,405.735672328,242.875621891),c(478.473290788,538.180030474,257.156746078,674.977522218,3229.98901833,1328.36773466))
targetgene="SLC16A1"
collabel=c("T3_DMSO_REP1","T3_DMSO_REP2","T3_DMSO_REP3","T3_8um_REP1","T3_8um_REP2","T3_8um_REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,cex.main=0.9,cex.axis=0.5,cex.lab=0.9,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),cex.axis=0.5,las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



dev.off()
Sweave("T3DMSOvsT38um_summary.Rnw");
library(tools);

texi2dvi("T3DMSOvsT38um_summary.tex",pdf=TRUE);

