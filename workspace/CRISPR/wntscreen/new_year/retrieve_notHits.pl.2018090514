#!/usr/bin/perl -w

print "Start Rescue NotHits Reads\n";

my ($lib,$exp,$dir) = @ARGV;
if(!defined $dir){
	$dir = '.';
}
if(!defined $exp){
	$exp = 'WNTScreen';
}
if(!defined $lib){
	$lib = 'hKO';
}

open FILE,"/home/bio-longyk/workspace/CRISPR/Library/lib_$lib.csv";
<FILE>;
my %lib;
while(<FILE>){
	chomp;
	my ($gene,$grna) = (split /,/)[1,6];
	$lib{$grna} .= "$gene;";
}

open FILE,"BlastResult_$lib\_$exp.txt";
my %info;
while(<FILE>){
	chomp;
	my ($seq,$lib,$iden,$len,$mis,$gap,$s1,$e1,$s2,$e2) =  split;
	my $mut;
	if($len > 17 && $s2 < $e2){
		if($s1 == $s2 && $e1 == $e2){
			for(my $i = 0;$i< 20;$i++){
				my $sub1 = substr($seq,$i,1);
				my $sub2 = substr($lib,$i,1);
				if($sub1 ne $sub2){
					my $pos = $i+1;
					$mut = "$sub2$pos$sub1";
				}
			}
		}
		else{
			$mut = "Shift";
		}
		if(!exists $info{$seq}){
			if(!defined $mut){
				print "$_\n";
			}
			else{
				$info{$seq}  = "$mut\t$lib\t$seq\t$lib{$lib}";
			}
		}
	}
}


open FILE,"RC_$lib\_$exp.tsv";
open OUT, ">Rescue_RC_$lib\_$exp.tsv";
open OUT2,">Ummap_RC_$lib\_$exp.tsv";
my $header = <FILE>;
print OUT "mutation\treference\t$header";
print OUT2 "$header";
my %merge;
my @mapped;
while(<FILE>){
	chomp;
	my @data = split;
	my $grna = shift @data;
	my $gene = shift @data;
	if($gene ne "NotHits"){
		print OUT "Match\t$grna\t$_\n";
		for(my $i=0;$i<@data;$i++){
			$mapped[$i] += $data[$i];
			$merge{$grna}->[$i] += $data[$i];
		}
	}
	elsif(exists $info{$grna}){
		print OUT join ("\t",$info{$grna},@data),"\n";
		my (undef,$lib) = split /\t/,$info{$grna};
		for(my $i=0;$i<@data;$i++){
			$merge{$lib}->[$i] += $data[$i];
			$mapped[$i] += $data[$i];
		}
	}
	else{
		print OUT2 "$_\n";
	}
}

open OUT,">Merge_Rescue_RC_$lib\_$exp.tsv";
print OUT "$header";
while(my ($key,$val) = each %merge){
	print OUT join("\t",$key,$lib{$key},@$val),"\n";
}




open LOG,"Log_$lib\_$exp.tsv";
open OUT, ">Log_Rescue_$lib\_$exp.tsv";
my @tatal;
my @permap;
while(<LOG>){
	chomp;
	my @data = split /\t/;
	print OUT "$_\n";
	if($. == 3){
		for(my $i=1;$i<@data;$i++){
			($total[$i-1]) = split /,/,$data[$i];
		}
	}
	elsif($. == 4){
		print OUT "Mapped to Library with mismatches";
		for (my $i=0;$i<@mapped;$i++){
			$permap = sprintf ("%.2f",$mapped[$i]/$total[$i]*100);
			print OUT "\t$mapped[$i], $permap";
		}
		print OUT "\n";
	}
}

	
print "Finish Rescue NotHits Reads\n";
